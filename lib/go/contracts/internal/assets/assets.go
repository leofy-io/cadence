// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../contracts/LeofyCoin.cdc (6.821kB)
// ../../../contracts/LeofyNFT.cdc (17.916kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _leofycoinCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x59\xdd\x6e\xdc\xbc\x11\xbd\xf7\x53\x4c\x7d\xd1\xae\x11\x7b\xed\x02\x45\x2f\x0c\x3b\x89\x93\x26\x40\x80\x36\x08\x92\xfe\x5c\x73\xa5\xd9\x15\x6b\x89\x14\x48\x6a\xd7\x1b\xc3\xef\xfe\x81\xc3\x1f\x91\x5c\x69\x6d\x23\x09\x02\x64\x25\x71\x86\xc3\xe1\x99\x33\x87\x0c\xef\x7a\xa9\x0c\x7c\x1e\xc4\x86\xaf\x5a\xfc\xb7\xbc\x47\x01\x6b\x25\x3b\x38\x5d\x5e\x6a\xc3\x44\xcd\x54\x7d\x99\x7d\x5e\x56\x75\x75\x7a\x72\xd2\x0f\x2b\xa8\xa4\x30\x8a\x55\x06\xfe\x89\x72\xbd\xff\x28\xb9\xb8\x2e\x5c\x3d\x9e\x00\x00\x5c\x5e\x02\x3d\xea\x2f\x82\x1b\xce\x5a\xfe\x13\x6b\xff\x21\x7e\x6f\x10\x70\x8b\xc2\x80\x69\x98\x01\xae\x01\x3b\x6e\x0c\xd6\xb0\x6b\x50\x80\x69\x70\x9c\x8d\x6b\xa8\x14\x32\xe3\x9d\xd8\x48\x9c\xe9\xc1\x24\x0b\xee\x7e\xff\x18\xfa\xbe\xdd\x5f\xc3\x7f\x3e\xf3\x87\xbf\xff\xed\xec\x24\x8f\xea\x7f\xdc\x34\xb5\x62\x3b\xf1\xca\x98\xc8\x18\x98\x42\xd8\x05\x0f\x2e\x77\x0c\xfe\xcb\x86\xd6\x4c\x46\x17\x27\x5b\xb0\x4e\x0e\xc2\x84\xa0\xce\xc9\xf4\x1a\xee\xea\x5a\xa1\xd6\xef\xca\x20\xff\x81\xbd\xd4\xdc\xbc\x3a\x71\x63\x90\x75\xf0\x00\x46\x1e\x0d\x31\x4e\x75\x10\xa2\x91\xf3\x01\xfe\x8b\x8b\x57\x47\x27\x70\x97\x46\xd8\x8d\x2e\xca\x98\x9c\xf7\x22\xa0\x32\x84\x0f\x83\x12\xbf\x94\x20\x6d\x94\xdc\xcf\x44\xe0\x9c\xcf\x46\x40\x01\xaa\x8f\x09\x2e\x5f\x1c\x02\xa3\x3c\xd0\xe2\x15\x28\xd4\x72\x50\x15\xce\xa3\x3c\x9b\x69\xc1\xda\x56\xee\xb0\xbe\x9b\x09\xeb\x2b\xeb\xb0\x86\x9e\x99\x46\xa7\x41\x59\x6f\x2d\x1a\x07\x82\x1f\x46\x2a\xb6\xc1\x6f\xcc\x34\xd7\x90\x3c\x64\x23\xbf\x63\x85\x7c\x8b\xea\xdb\xb0\x6a\x79\xe5\xc6\x8e\xbf\xb3\xa1\x1f\x58\xcb\x44\x85\x2f\x18\x79\x57\x77\x5c\xcc\x4e\x3f\x6e\xae\x61\x2d\x68\xaa\x61\x90\xeb\x91\x6d\x80\x0b\xc0\x07\xae\x0d\x8a\x0a\xa3\xe3\x2d\x53\x60\xac\x49\x5e\xf5\xd1\xdd\x08\xfc\x71\x87\x3e\xb1\xaa\x81\x41\xa3\x02\x6d\xa4\x42\x0d\xcc\x3a\xb7\x04\x58\xa1\x9d\x52\x8a\x76\x4f\x24\x44\xc6\x76\x5e\xd3\x20\x77\xa3\xd9\x06\xd3\x8d\x5e\x0f\xa2\x32\x5c\x0a\xed\x47\x79\x13\x26\x6a\xd8\xc8\x2d\x5a\x10\xc1\xca\x39\xeb\x15\xd2\xfb\x5e\x6a\x63\xe9\xad\xe6\x64\x18\xbc\x71\x51\xb0\x69\xa0\xc2\x3d\xc1\xb5\x62\x6d\x8b\xf5\x32\x9d\xbb\x6a\xb0\xba\xd7\xd0\xb0\xbe\xb7\xb8\x32\xa0\x06\x61\x78\x87\x64\x89\x5b\x54\xc0\x62\x7c\x04\xb0\xcc\x45\xf0\xf4\xdd\x43\xd0\x7e\x17\x6e\xe9\x2b\x0c\x60\x0c\xab\xb2\x6c\x8c\x0f\xc6\x26\x27\x23\x67\x42\xb8\x8d\x31\x78\x73\x95\xb5\xe6\x82\x6c\xcf\x41\x4b\xfb\x59\x11\xc0\x85\x84\x1d\xdb\xc3\x5a\xda\xc0\x3a\xd6\xf2\x8a\xcb\x41\xbb\x8d\x30\xd2\x4f\xe9\x12\x18\xb3\x22\x07\x3f\x29\x17\xc0\xb8\x5a\xc2\x1d\xe8\x1e\x2b\xce\x5a\x5f\x19\x63\x09\x09\xc4\x5a\x5b\x47\xab\x31\x04\x23\xa9\xd2\x82\xb7\x91\x81\x96\x65\x7d\x44\x37\x34\x7f\xd1\xd9\x96\xdf\x94\xdc\xf2\x1a\xd5\x79\xf1\x3e\xd4\x49\xf9\xde\x17\x05\x3c\x3a\x1c\x26\x9b\x46\x58\x85\x95\xff\xee\x96\xa6\x61\x1b\x51\x9a\xe2\xda\x8f\xca\x31\x1d\xe1\x12\xfa\x1e\xed\x48\x70\x68\x51\x10\x56\x42\x09\xb5\x7b\x6f\x41\x11\x6d\xad\xe1\xa2\xf0\x7c\xe6\x5b\x77\xf8\xa3\xb1\x5d\x2f\x83\xcb\xdb\xe0\x3c\x0e\x79\xca\x22\x09\xed\x30\x79\x97\x7e\xfe\x1c\x10\xe8\xb0\xc2\xee\x5d\xbd\x39\x66\x05\xe6\x1e\xd4\x66\xe8\x50\x98\xd4\xce\x96\x4a\x70\xad\x9d\xb1\xb7\xa1\xae\x1b\x6b\x6d\x39\x33\xef\x17\xe3\x11\xa5\x3d\xe5\x1a\xb4\xf2\x87\xa9\xbd\xaf\xd1\xc0\xce\x83\x76\x40\x69\x64\x5b\xa7\x0e\xec\x0c\x9d\x14\xb8\x8f\x23\x57\xc8\xc5\x06\x8c\x62\x42\xaf\x51\x29\xac\x97\x76\x16\x85\x66\x50\x42\xd3\x78\x81\xbb\x76\x9f\x3a\x09\x75\xe4\xa7\x94\x59\x35\x91\x5f\x57\x95\xb6\x50\xb8\xa1\x12\x5c\x25\xcd\x3b\x75\x85\xad\xc6\x9d\xad\xa5\xc9\x15\x5b\xcc\xac\x07\x11\x53\x56\xb6\xae\x6b\x78\x9f\x43\xd4\x45\x74\x74\xdf\xb3\xc7\x0b\x9f\xfe\xcc\xc0\x76\xb6\x59\xa9\xe3\xfe\x0d\x52\x87\x9c\xc9\x9d\x40\xf5\x6e\xc9\x9c\xaa\x38\xcb\x7c\xb9\x3c\xc2\xcd\x45\x4a\x04\x23\x52\x9d\xb7\xb3\x19\x10\xfa\x8c\xbd\x06\x83\x7e\x4f\xe4\xea\xff\x58\x95\x40\x24\xf4\xb1\xba\xd6\x59\xc9\x19\x1d\xeb\xcc\xef\x64\x56\xc7\x08\xb4\x3c\xfd\x2c\x2e\xb9\x06\xdf\xc8\xad\x1f\x2f\x44\xc8\x81\xb6\x73\xbb\xb8\x56\x58\xb1\x41\xe3\x08\xf4\xac\xe6\x6c\xb8\x09\xa2\x2d\x76\x51\x85\x30\x3c\xc5\x11\xdf\x90\xe9\x5f\xc6\xc0\x1b\x96\xad\x69\x85\x28\x2c\x1e\xf5\x60\x95\x83\x5d\x35\xd1\xf5\x5a\x52\xcb\xf1\x60\xf4\x42\xe9\x28\xee\xfc\x06\x2c\xdc\x66\x4f\x61\xad\x24\x19\x2b\x09\x88\xf7\xe0\xe6\xc2\x2b\x69\xfd\x27\x78\x1f\xfb\xfd\x32\x5f\xf5\x73\xf8\x7c\xe3\x9c\x2d\x4b\xb2\x2a\x60\x7a\x28\x77\x33\x33\xa7\x7a\x9f\xc5\x6a\x66\x03\xb7\x70\xb5\xbc\xca\xbe\x87\x3d\xcd\x79\x3d\x81\xac\x1f\xb0\x28\x93\x32\xae\x3e\x11\x35\x70\x3b\xf3\xfe\x22\x4b\x41\xe6\x88\xaf\x17\x59\x7a\xde\xda\x18\xcb\xd9\x8a\xdc\x14\xa2\x37\xb5\xcf\x97\xff\x74\x92\xff\x7a\x8a\x72\xcb\xd5\xee\xa7\xae\x37\xfb\x29\xe5\x95\x17\x62\xce\xcf\x0e\xf6\x96\xbf\x80\xa5\x85\xf5\x13\x95\x8c\xf2\x42\xd4\x91\x6f\xf9\xc8\xa7\xac\x6d\x2d\x33\x7b\x5e\xb5\x22\x81\x44\x45\x37\x68\xc7\xaf\xae\xc9\x06\x2d\x94\x3a\x23\x01\x48\x4e\x9c\xdb\x48\xd5\xa5\xe8\xb3\x2f\xa4\xaa\x9d\x54\xa1\xea\x75\xdf\xa3\xb3\xaa\xa2\xe6\xe4\xf4\x07\x5b\xb5\xc4\x11\xca\xe9\x83\x50\x1d\x3a\x36\x7c\x2a\x51\x30\xfb\x1e\x0f\x94\x88\xad\xa6\x32\x8d\x0b\xcb\xdf\x25\x63\x3f\x43\x98\x76\xbf\xd3\xdd\xc9\x54\x0e\x69\x71\xae\x8d\x62\x46\xaa\x42\xa6\x38\x77\x5f\x71\xe7\x14\xd6\x8b\x38\x35\x6e\x65\xb2\x41\x93\x27\x9d\x63\x1c\x52\x4c\x3c\x73\xda\xb9\x86\xf7\x5e\xfa\x3d\x1e\x16\xf9\xd1\xe3\x52\xf6\x78\xbc\xf9\x4c\x47\x30\xe3\xa0\x2c\x82\x24\x6f\x87\x3a\x3b\x34\x1c\xd7\x8a\x08\x06\xcc\x6e\x46\x40\x90\xd3\xe1\x96\xd0\x83\x7a\x7d\x91\x6c\x8d\x29\x29\x05\xa7\x17\x4d\x16\x78\xee\xf0\x1b\x34\x7b\xd8\x99\xbc\x1b\x45\xb9\x0c\x89\x10\x9d\xdc\x88\x6c\x26\x6b\xe6\x48\xe4\x45\x70\xb1\xc3\x75\xb2\xae\x73\x6a\xb6\x36\xaa\x2e\x14\xb5\x49\xce\x81\xe7\xa5\x30\x4c\x34\x57\x37\xc7\x02\xc7\x90\x36\x86\x3b\xa1\x93\x8a\x0e\x54\xc0\xcc\x1e\xe3\x0e\x59\xd4\x67\x99\x58\xf6\x1a\x4e\x5d\xa6\xfc\x15\x87\xe3\xa1\x15\xc2\x86\xb0\xa5\x6c\x0a\x04\xd1\xda\xe9\x9c\x9f\x1b\xdf\xdc\x8a\xc4\xcf\xf8\x6d\x51\x6b\xe7\xd4\xe6\x21\x6c\xa6\x73\x75\x3a\x43\xdc\xf0\xea\x66\xf3\x66\x4a\x00\x1e\x46\x09\x53\xa1\x3f\xab\x1e\x8b\x1b\x9f\x52\xec\xc1\x2f\xe9\x43\x3a\xf2\x4c\x93\xc9\x94\x00\x2e\x97\x93\x3d\x4f\x17\x3d\xcd\x90\x3a\x23\x47\xe5\x7d\x0b\xdc\xc2\xa5\x6f\x27\x97\x31\xc7\xb9\xca\x21\xbb\xc3\xdb\x17\x6b\xd9\xd3\xd3\x68\x18\x46\xe5\xb6\x07\xd7\x31\x53\xa6\x1f\x0a\xc1\x40\x96\xe5\xf5\xcc\x64\xb4\x34\x88\xec\x32\x4d\x3b\x1e\x46\xe3\xd5\x80\x36\xcc\x24\x47\x15\x9a\x22\x87\xd9\x5f\xaf\xae\xac\x6e\x4a\x1d\x39\xe2\x06\x06\x2e\x62\xa8\x58\xcf\x56\xbc\xe5\x66\x1f\xaa\x3c\x39\xbb\xd1\x5d\x05\x3e\xf4\x52\xa3\x2e\x0f\x6e\xbe\xe1\x8e\xf7\x1f\xa6\x51\x72\xd8\x34\xf4\x31\x64\x0e\x88\x00\xd7\xac\xcc\x84\x67\xe2\xa5\x66\x5b\x5c\xcc\xe1\xad\x5c\xd0\x99\x93\x8e\x05\x79\x24\xf9\x3c\x9b\x9e\xa4\xe5\xe2\xfe\xe6\xcf\x85\xd9\xe3\xf4\x35\xc3\xd3\xdb\xc5\x4c\x01\x1f\x42\xe6\x3c\x1b\x69\x98\xda\xa0\x39\x16\x5e\x1c\x7e\xf6\x9b\x77\x24\xd9\x95\xa0\xea\xd6\x1c\x6d\x7b\x4b\xb6\x24\x5c\x98\x3c\xb3\x23\x2f\x49\x96\x77\x35\x9f\xab\x83\x12\xf9\xbd\xa9\xa2\x83\xa0\x40\x30\x6a\xf0\x3a\x2b\x9e\x31\x45\x1d\x81\x69\xff\x8a\xe4\x3e\x80\x6a\x26\x2c\x33\x7a\xb5\x67\x24\xa7\x0e\x6e\x2e\xc2\x05\x59\x26\xdd\x16\x33\xa8\xf2\xd0\x25\xdb\xe4\x4c\x53\xd6\x78\xbe\x80\x4f\x96\x8f\x99\x48\x6f\xaf\x75\x23\x77\x89\x64\x88\x91\xda\x03\xe8\x78\x05\x95\x1c\x0d\x13\x4e\x3f\xf2\x5f\x33\x07\xc5\xe3\xc9\xf4\xe9\x04\xfe\x08\x00\x00\xff\xff\xa0\xb3\x88\x73\xa5\x1a\x00\x00"

func leofycoinCdcBytes() ([]byte, error) {
	return bindataRead(
		_leofycoinCdc,
		"LeofyCoin.cdc",
	)
}

func leofycoinCdc() (*asset, error) {
	bytes, err := leofycoinCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "LeofyCoin.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x24, 0x49, 0x6d, 0xb1, 0x4, 0xb3, 0x2d, 0xfe, 0x87, 0x3, 0x14, 0x50, 0x1e, 0x80, 0x2c, 0x5b, 0x49, 0x6c, 0xf0, 0x83, 0x1a, 0x47, 0x79, 0x1e, 0x14, 0x17, 0x46, 0xdf, 0xd9, 0x61, 0x8d, 0xfc}}
	return a, nil
}

var _leofynftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5d\x73\x1b\x37\x92\xcf\xf1\xaf\x68\xf3\xc1\x26\x73\x12\xe5\xfb\xa8\x7b\xe0\x4a\xb1\x7d\x92\x75\xa7\x2b\x47\xeb\x8a\xb8\xd9\xba\x72\xb9\x6e\xc1\x19\x90\xc4\x7a\x08\x30\x00\x48\x86\xab\xd5\x7f\xbf\xea\xc6\x00\x03\xcc\x60\x28\xc6\x91\xee\x69\xf9\x10\x53\x1c\xa0\xd1\xdf\x5f\xe8\xc9\xd9\xf7\x2f\x00\x00\xae\xb8\x29\xb4\x58\x5b\xa1\xe4\x04\x2e\xb9\xb4\x9a\x55\x70\xb7\x62\xda\xc2\xa5\xc2\xbf\x0a\x0b\x73\xa5\xe1\x23\x57\xf3\xfd\x0b\xda\x32\x5d\x0a\x03\x86\x96\x14\x7e\x09\x7e\x61\x42\x1a\xb0\x4b\x0e\x85\xd2\x1c\xe6\x1b\x59\x20\x54\x56\x09\xbb\x27\x10\xb4\x99\xe0\x9c\x40\xa1\x39\xb3\xbc\x84\xd9\x1e\x3e\x7e\xf8\xe3\xf5\xff\xc0\xd5\xcd\x7f\xde\x4c\xdf\x7f\x84\xbb\xf1\xc7\xb1\x3f\x86\x37\xf0\x57\x4c\xb2\x05\x77\xe0\x4b\x66\x19\x30\x63\x54\x21\x08\xc6\x4e\xd8\x25\xb0\xaa\xa2\x87\xc2\xf2\x95\xa1\xfd\x76\xc9\x2c\x30\xcd\x61\x63\x78\x09\xcc\x80\xe5\xab\x75\xc5\x2c\x37\x84\x0d\x2e\xbe\xbd\x9e\x9a\x70\x98\x04\x26\xe1\x7d\xb9\x12\x12\x0a\x26\x6b\x0c\x41\xf2\x1d\xdc\x20\xcc\xb1\xfb\x07\x51\x32\xc2\x58\x50\x73\x60\xb0\xde\xcc\x2a\x51\x80\xb1\x7a\x53\x58\x77\x22\x81\x0b\xec\xa8\x17\x08\x39\x57\x7a\xc5\x90\x1f\xc0\x66\x6a\x63\x81\x11\xa6\x27\xc0\x64\x89\x70\xb4\xd8\xe2\x69\x9a\x1b\xb5\xd1\x85\xc3\xd9\x51\xa1\x60\x25\xa4\x25\x3c\x6e\xaf\xa7\xaf\x0d\x54\x42\x7e\xe5\x25\x3e\x40\x12\x10\xa9\x88\x61\x8c\xf0\x0f\x60\x96\xcc\xb1\x6c\xad\x76\x5c\xe3\x96\x52\x11\xa7\xd4\xdc\x31\x6b\xb5\x56\xda\x32\x69\x81\x91\xac\x1c\xe3\x84\xa4\x87\xa9\x84\xc7\xf0\x67\x62\x11\xc2\x37\xb0\xc3\x3d\x56\x41\x81\xc0\xbc\xa4\x0d\xee\x64\x84\xd1\x49\x2d\x01\xbe\x77\x4b\xec\x92\x0b\x0d\x33\xa5\xb5\xda\xe1\xf3\xb0\x07\x81\x2c\x38\xb2\x43\xf3\x39\xd7\x5c\x16\x1c\x3c\xdd\x8e\x45\x1e\x9d\x06\x11\x94\xd5\x89\x07\x2e\xdb\x38\x28\x19\xf4\x00\x36\x46\xc8\x85\x13\x4b\x00\x3f\x26\xf0\xf4\x1f\xa2\x08\x75\x80\xd4\x04\xd9\xcc\xcb\x1a\x30\xfe\x20\xa4\xb0\x82\x55\xe2\x6f\x41\xc7\x88\xb6\x9b\x2b\x14\x1a\x01\xc0\x55\x9a\xdb\x8d\x96\x4e\x95\xf1\x60\x02\xa3\x73\x3a\xcc\x2a\xa3\xa0\xe4\x73\x21\xb9\x01\x06\x97\xaa\xaa\xb8\x63\x82\x97\xd7\xd8\xd9\x96\x30\xa8\x8a\x6a\xf6\x57\x9e\x28\x15\xdf\x72\xbd\x77\x06\x84\x58\x83\xda\x49\xae\x61\x27\xaa\x0a\x8c\x55\x84\x70\xcd\x68\x56\x14\x6a\x23\x6d\x50\x20\x32\x9e\xfa\x19\xee\x2c\xc2\xd1\x11\x9e\x2b\x26\x64\x0d\xbd\xde\xef\x60\x13\xda\x4b\xb6\x45\x9e\x1a\x3c\x14\x7e\x54\x2b\x2e\x6d\x04\xa5\xd6\x1b\x4b\xf2\xd8\x18\x8e\x87\x2e\x55\x55\x86\x1d\x2b\xda\x61\x1c\x31\x04\x4b\x2a\x0b\x7b\x6e\x61\xc6\xb9\x04\xc3\x9d\x3a\x31\xdc\xec\x79\x77\xab\x2c\x9f\xc0\x7b\xa2\x0e\x6d\xa3\x58\x32\xb9\x40\x79\x36\xb2\x26\xfc\xd6\x4c\xa2\x85\xcd\x91\x67\x42\x6e\x59\x25\x4a\x60\x7a\xb1\x21\x1c\x85\x43\x6d\xad\xd5\x56\x94\xbc\x04\xa5\x41\x49\x8e\xfa\x8f\xa8\xad\x35\x3f\x2d\x94\x2c\x45\xad\x3a\x1a\xd6\xca\x90\xce\xfb\x9f\x98\xe6\xf2\xb5\x85\x15\xb7\x4e\x6f\xae\xc3\xd9\x44\x4a\xa9\xe8\xa9\x2a\xc5\x7c\x5f\xa3\xe9\xe4\x21\x56\xeb\x6a\x5f\xeb\x06\xbc\x41\xc8\x52\x54\x4e\x8c\x68\xf1\x76\xa9\x0c\x87\x82\x19\x6e\x40\x72\x67\xcd\x33\x34\x57\x59\x56\x8d\x2a\xa1\x66\x13\x3b\xbe\x3f\x7b\xf1\xc2\xd9\x2a\xdc\x2a\x79\xbd\x91\x0b\x31\xab\xf8\x54\x7d\xe5\x12\xe6\x5a\xad\x60\x30\x3e\x33\x96\xc9\x92\xe9\xf2\xac\xbd\x62\x5c\x94\xc5\xc0\x6f\xff\x91\x5b\x86\xfe\xf3\x67\xc1\x77\xa6\xbb\x37\x79\x9c\x6c\x7c\xe4\xd0\xfe\x13\x49\xa3\x2e\x95\x68\x36\x85\x5f\xdc\xba\x17\xeb\xcd\xac\x31\x12\x7a\x78\x7b\x3d\x9d\x74\x29\xbd\x77\x7a\x71\x76\x06\xa7\x4f\xf3\xf1\xe0\x9c\xd2\x07\x14\x3e\x6c\x51\x57\x9f\xfa\x2c\x0f\xef\xc3\x4a\x58\x8a\x5a\xe8\x7c\x50\xca\x9e\xe2\x06\x01\x61\x7c\x7c\x74\xca\xbb\x99\xa1\xed\xcb\x26\x22\xdf\x34\x9e\x69\x38\xca\x43\x66\x21\x72\xf9\xe8\xd4\x0b\x15\x17\x5d\xba\x27\x43\x51\x4e\xe0\x4f\x37\xd2\xfe\xfb\xbf\x9d\xa0\xd2\x93\x32\x4c\xe0\xfe\xce\x6a\x21\x17\x13\xf7\xcf\xc3\xa8\x05\xe0\x8e\xdb\xdc\x7e\xc9\x56\x7c\x02\x6e\x4f\x8d\x65\xb3\xe7\xcf\xc2\x2e\x4b\xcd\x76\xc9\x0e\xd4\x90\x09\xbc\x2f\x4b\xcd\x8d\x79\xdb\x3e\xe6\x8a\xaf\x95\x11\x36\xd9\x61\x55\xff\xfa\x1f\xc9\xa1\x27\xcb\x05\xf9\xef\xe6\x6f\xc3\xb5\x60\xd5\xed\x66\x35\xe3\xda\xfd\xfa\xaf\xff\xd2\x30\xf4\x96\xad\x78\x09\x9f\x98\x5d\x7a\x6d\x08\x27\x54\xdc\xf1\xed\xce\x2a\xcd\x16\x1c\xd7\x20\xa9\xe1\x8f\xce\xc2\x4f\x94\x08\xb8\x75\xcd\xf7\x17\xc9\xba\x26\x22\x1c\x05\xb6\x59\xde\x03\x3c\x5e\x4c\x89\x4d\x2f\xd8\x67\x32\xac\xa9\x5a\xdf\x2d\x55\x93\x44\x9c\x56\x7c\xcb\x2b\x98\x0b\x5e\x95\x66\x1c\x56\x2d\xb9\xe1\x3e\x65\xc2\x4c\x64\xc3\x2a\xd8\xb2\x6a\xc3\x4d\x93\xc4\x51\x84\x2b\x7b\x72\x93\xe7\xb2\xd5\x9f\x99\x16\x6c\x56\x71\x30\xe2\x6f\x1c\x4a\xe1\x12\x5a\xbd\xc7\xf8\x11\x99\x96\xd7\x0e\x56\x14\xdc\x98\xa1\xe1\xd5\x7c\x04\x5b\xa6\x5d\x32\x3a\x81\x77\xf7\x4e\xdf\x26\xb4\xe9\xa1\x11\x3a\xae\xb1\xca\xb2\xea\x6e\xb3\x5e\x57\x7b\xaf\x97\xdd\xe7\xa4\x6a\xe9\x9a\xe7\xf4\x85\xb1\x37\xaa\x65\x76\xa9\x56\x64\x7d\x1c\xa6\xfb\x35\x77\x69\x8c\x68\x62\xff\x33\xe8\x0e\x69\x05\x8a\xfe\xaf\x1b\x63\xe1\xfb\xe8\xc4\xef\x29\x81\x47\x3c\x6a\x05\xb1\x98\x35\x79\x84\x3d\x00\x8c\xb3\xca\x2e\x79\x48\x87\x8c\x4f\x4f\xc6\x35\xf0\x08\x24\x26\xc6\x52\x85\x3a\x26\xc0\x70\xca\x58\x2b\x9f\xd3\xc9\x13\x98\x61\xfe\x8e\xc9\x06\x86\xbf\x82\xc3\x10\xb3\x0a\xca\xd6\x46\xa8\x19\x75\x82\x61\xe9\x0c\xc2\xd2\x83\xc3\xf3\x67\x3c\x2e\x7e\x12\xcc\x1d\x31\xa1\x76\x48\x4e\x7d\x1e\x1d\xf7\x40\x49\x99\x31\xed\x84\x9f\x7c\xe9\xe0\x52\x35\x55\x95\x26\x04\x82\xb8\xe8\xf2\x3b\xeb\xc4\xd8\xac\x79\x21\xe6\xa2\x80\xf7\xda\x62\x75\x44\x45\x00\x54\xe2\x2b\x77\xf5\x87\x28\xec\x06\x8b\x42\x4c\x01\xea\x25\xff\xad\x96\x12\xae\x14\x8f\x5d\x6b\x08\xc6\x94\x95\xd7\xe9\x67\x15\xd5\x06\x0c\x30\xa5\xaf\xea\xfc\xbe\xae\x6e\x5c\x22\xac\xe6\x1e\x04\xa6\x76\x1e\xe7\xb1\xc7\xb4\xb1\xba\x50\x1d\x51\xa6\x3e\x67\x85\xab\xa2\xda\xee\x14\xee\x69\x87\xdf\x35\xdf\x48\xac\x54\x6e\xae\xcc\x70\x34\x81\xcf\xce\x0a\xbf\x64\x97\xa0\xd5\x7f\xe4\x72\x61\x97\xb8\xf4\xa6\x4e\xc4\x33\xab\x30\xdd\xba\x62\x96\xfd\xc7\xfe\x1a\x5d\xe2\xb0\x1d\x9e\xc8\x51\x86\x10\xea\xbf\xbc\xed\x80\x6b\x0a\xab\x16\x88\xd1\x04\x5e\xe1\xcf\xf7\x4d\x08\x7a\xa0\xdd\x0f\x19\x76\xa4\x4c\x98\x1c\xc3\x94\xac\x93\xf3\x2e\x64\x1c\x79\x3b\x57\x57\x0a\x0b\xc3\x51\x04\x02\x3f\xe8\x2d\xc7\x04\x03\xce\x4f\xe1\xfe\x21\x3c\x8c\x76\x7a\x3a\x9d\xe1\x10\x9d\xdd\xe4\xa4\xe6\xce\xc3\x09\x56\xd3\x05\x9f\xc0\x9f\xae\xc5\xaf\xc4\x02\x87\x98\xcf\x1f\xfd\xe7\xec\x0c\x5c\xd6\x42\x3a\xe4\xb3\xa5\x64\x09\x92\x27\xb9\xab\x58\xcf\x4f\x7d\x4b\x80\xce\x4f\xd6\x01\x44\xc9\x92\xff\x76\xd2\x5e\x52\xa3\x45\xff\x24\xcf\x46\xc9\x5f\xc9\x1f\x18\xba\x11\x83\x2b\xb8\xf0\x98\x8c\x9d\x88\x3b\xc4\xdc\xb9\x1a\xd0\xb6\x0b\x66\xf2\x23\x6c\xc1\x7b\xb8\xfe\x99\xc0\x7f\x81\xf3\xd3\x97\xfe\x84\x64\x25\x5f\x89\x6e\x8a\x18\x44\xdc\x8a\x4e\x51\xd2\xe8\xbf\x8c\x3a\x88\xde\xc8\x42\x73\xaa\xce\xa8\x81\x71\x05\x46\x39\x6f\x83\xb8\x1b\x2c\xa8\x5c\xc7\x66\xe1\x1d\xb1\xff\xf4\x9d\x0a\x17\xfd\x8f\xfe\x09\xfe\x39\x45\xa0\xae\xc9\x1c\x53\x73\x6c\xcf\xe8\xdd\x6f\xb2\xaf\x96\x7e\xaf\x35\x6f\xfd\xd2\xe2\xbf\x83\xf8\x05\x5e\x5e\x60\x8d\x38\x81\xc1\x25\x93\x18\x8a\xdc\xa1\xc4\xfa\x09\x15\xe8\xa4\x86\xa5\xe2\xc4\x22\xfe\xab\x30\x76\x90\xc0\x7d\xc8\x12\xfa\x2a\x73\x14\x33\x5d\xb4\xff\x90\x63\xc0\xd9\x59\xed\xf3\x6a\x68\xd4\x98\x60\x5a\xb3\xbd\x6f\x21\xe1\xb3\x90\xa4\xd5\x9a\x47\x88\x36\x9e\xe3\x08\x37\xda\xe2\x50\x8d\x7a\x83\xf9\xf8\x2b\xdf\x9b\x03\x08\x36\x1e\x17\xe2\x47\x3f\x39\xa4\xc9\x07\x43\xe5\x9e\x53\xe9\x4f\x8d\xbc\xa8\x18\x6a\x63\xd7\xf1\xe0\x8f\x22\xe8\xa0\x1f\x46\xb1\xe5\xee\x03\x4f\xa9\x6d\x94\x89\xb1\x75\x6c\x8d\x21\xf5\x7c\x42\xf8\xa5\x88\xe1\x65\xe3\x61\x1e\x01\xe0\xc3\xaf\x13\x1f\x6d\x06\x2e\x3e\x0f\x5c\xf8\xf5\x94\xaa\x15\xb7\x4b\x21\x17\x47\xc0\xa2\xa8\x3f\xf0\xe1\x7d\x10\xef\x88\xbf\x7f\x62\x9a\xad\xb8\xe5\xda\x4c\x42\x5d\x86\x6a\x2e\x02\xfe\xa4\x47\xce\x33\x18\x98\x71\x21\x17\x60\x38\xd3\xc5\x32\x92\x5a\x0b\x8d\x9a\x06\x84\xe3\x58\x61\x55\xbd\x07\x73\xc6\x68\x57\x56\x4d\xa6\xb1\x20\xdc\x7e\x86\x49\x91\x8b\x2c\xf0\xc7\xb5\x6b\x68\x3f\x71\x38\x6f\xe9\xd6\xd9\x19\x5c\x51\x5b\x69\xae\x34\x65\x3c\x9a\x6f\xb9\xb6\x20\xe6\xa1\xb1\x79\x73\x05\x4a\xd7\x08\x0a\xe3\xbb\x5e\x09\x14\x31\x1f\xf6\x3b\x99\xd1\x7d\x27\xc8\x50\x3e\x75\x71\xd0\x5b\xe4\x2c\x00\xd7\x8c\x3d\xcb\x3e\x13\x46\x5f\x5a\x4e\x29\xfe\x8b\x57\x86\x77\x9d\xa1\x77\xc9\xa2\xfa\x43\xcf\xde\xe6\x5b\xf8\x52\x72\x63\xb5\xda\x0f\x5b\xb4\xd4\x3f\x47\xb4\xb7\x80\xe4\x32\x9f\x34\x11\x74\x0e\x31\x4d\x74\x3c\x8b\x1a\x71\x76\x1e\xf7\x67\x24\x9d\x94\x49\x52\xc3\xc1\xf5\x27\x7c\xdb\xa1\xb3\x28\xc9\x62\xfa\x62\x52\xe3\x65\xd1\x51\xbd\x0a\x61\xb0\xf9\xfd\xbe\x6e\xb7\xa5\x79\xdc\x43\x07\xde\x7a\xa3\x8b\x25\x33\x7c\xb8\x66\x7b\x0c\xce\x13\x78\x97\x36\xf5\x7e\x66\x9b\xca\x8e\x26\xf0\xae\xd3\x60\xbc\xbd\x9e\x1e\x4c\x2a\x27\x11\x5b\xe3\x2c\xcc\x55\x79\xb0\x91\xe2\x97\x0d\x25\x02\xfe\x5e\x26\xd1\xb6\x1e\xf6\xc7\x50\x28\xf5\x31\xe1\x0e\xa8\xf1\xa5\x74\xd5\x12\xae\x03\xc8\x96\x8d\xb3\xe5\x15\x5b\xaf\x5b\xee\xcc\xf7\xde\x31\xf8\xe2\x9e\x4a\xc9\x05\x58\xae\x57\xb0\x63\xae\xe3\x1e\x00\x93\x6b\x9c\xf9\xae\xc4\x18\x6e\xec\x6b\x84\x6d\xf9\x6a\xad\x34\xd3\xfb\x18\x6c\xa1\x64\xdd\x81\xdb\x2d\x45\xc5\x61\x87\xae\x69\x81\xd5\x90\xbb\x07\x9a\x71\x6b\xb9\xa6\x33\xdc\x05\x4d\x28\x5d\x72\xee\xea\x08\x6d\x3b\x4e\xdd\x3a\xab\xb0\xe4\x8a\xd3\xff\x77\x19\x65\xea\xee\xea\xd1\x52\xcc\xf5\x7f\x43\x8e\x7e\x54\xce\x14\xf8\x52\x47\xf2\x97\x17\xf0\x66\x02\x83\x5b\xdf\xe7\x0c\xd2\x29\xea\x04\x8a\x03\x5f\xad\xed\xbe\x9d\x25\xc5\x7f\x05\x37\x41\x19\x76\x5f\x16\xd9\xdd\x12\xce\xba\xe8\x46\xd9\xb0\x88\x68\x84\x8b\x4c\xc6\x4f\x8f\x63\xb1\xc0\x05\xbc\xe9\xae\x48\x45\x12\x95\x20\xb1\xd9\x1f\x4a\x5c\x57\x42\xda\xdb\xeb\x69\xa7\xe8\x42\xb5\x74\x90\x98\xbf\x59\xcc\x15\x3e\xa8\xf3\xcd\xa1\x08\xa8\x23\x94\x6e\x35\x50\x57\x02\xdd\x95\xb5\xfd\x46\x2c\xef\x2e\x4a\x1b\xb2\x5d\x36\x61\x3a\x1f\xaf\xef\x56\x17\xa5\xeb\x12\x47\x85\x90\xe6\x85\x58\x0b\x2e\xc9\x46\xeb\x9b\x2d\x7f\x33\xc8\x85\x6e\xba\x0b\x8f\x09\x60\x5c\xc3\x1e\x5a\x74\x7b\x13\x38\x3f\x75\x3c\x6a\x21\x41\x15\x53\xd4\x7c\xce\xb2\x27\xcb\x8e\x63\xc8\x6f\x1d\x96\xd3\xa4\x23\xf8\x96\xc3\xa9\x63\x00\x51\x09\x75\x40\xc7\x66\xcc\x16\xcb\x1f\x6b\x45\xfb\x65\xc3\xa4\x15\x36\xb4\x29\x5b\xd1\x99\xfa\x05\xa1\x20\x6f\xeb\xbc\xf3\x8f\x02\xce\xc1\x83\xe9\xab\x9c\x82\x5e\x77\xb5\x0c\x2e\x40\x20\xca\xfd\xa9\x44\x87\x02\xc3\xed\x27\x34\xd1\xe1\x41\xa7\x74\xc0\xa4\x7b\x4b\xc6\x6f\x0e\xcf\xf9\x7a\xe3\x55\xce\x2b\x60\x7a\x76\x7c\xb8\xcf\xa0\xfa\xfb\x22\xff\xf1\xe5\x6e\xcb\x98\x7c\x15\xe8\xdd\xf9\x0f\xe4\xcd\x2b\x61\x2c\x9a\xe6\x12\x83\x75\xa5\x39\x2b\xf7\xee\x8e\xd8\x63\x59\x0e\x3a\xd0\x6b\xbc\xc7\xc2\xdc\xd4\x2d\xd9\xe1\x74\xbf\xe6\xe7\xef\x9a\x9b\x46\x22\xe1\x87\xe1\x68\x34\x81\x41\xbd\x1c\xb6\xf8\x9b\x0f\xf8\x9a\xff\xb2\xe1\x06\x4d\x65\x5e\x53\x08\x64\xe5\xfd\xa7\xcd\x58\x45\xdd\xdf\x8b\x8b\x48\x35\x3a\xe0\xb1\x5e\x8f\x3b\xcb\xd1\x41\xb4\xe1\x60\x09\x4f\xdd\x9f\xb9\x45\x1f\x9c\xe3\xe0\xce\xdf\xa1\xf9\x2f\xc1\x9f\xf4\xb0\xfa\xf3\x9b\x2f\xa3\xce\x01\x0e\xcf\xc8\xf6\x17\xdc\x06\xc6\x11\xdf\x5a\x66\x46\x1b\x82\x2f\x74\x77\x76\xe7\xa7\x9e\x2f\xa3\x9c\xe2\x9e\x9f\x22\x1d\x39\x25\x0c\x69\x3c\x1c\xc8\xe3\x53\x72\xf2\x09\x7d\x94\xc0\x31\x09\x62\xb5\xae\xa8\xc7\xe4\x66\x6e\x68\x58\xa7\xd8\x18\xab\xa2\x34\x61\x2b\xf8\xae\x99\x6d\x1a\x27\x50\xe8\x59\x32\xd4\x94\xa4\x18\x7e\x71\xc8\x77\xeb\x0c\xcf\xf3\x30\xbe\x47\x87\x6e\x25\xc1\x36\x76\xa9\xb4\xcf\x86\x3a\x8f\xe3\x8b\xd3\xce\xc3\x32\x1e\xd8\xea\x59\x63\x97\x9b\xd5\x4c\x32\x51\xf5\xae\x78\xa4\x96\xc9\xdd\x8b\xb6\x92\xbb\x44\x5a\x29\x41\x69\x58\x8f\xa9\x39\x69\xcb\xb8\x4d\x4a\xba\x20\xa2\xe3\xbd\xdc\xdf\x11\x8f\xef\xd3\x19\x85\x6b\x51\xf1\x87\x74\x57\xab\xec\x6e\x39\xf1\x0c\x61\xfe\xe1\x28\xe3\xf0\x1d\x65\x70\x51\x93\x98\x89\xbd\x6c\x85\x01\x01\xff\xe9\x3e\x8c\x28\x84\x8b\x98\xde\xee\xd2\x40\x2b\x5c\x34\x74\x8f\x37\x5a\xb4\xac\x2f\xcd\x58\xeb\x5e\x70\x67\x41\x4c\x27\x5c\x24\x64\x1f\x51\x0f\x67\xe7\x2f\xc6\x37\xb7\xd7\xd3\x93\x74\x82\x64\xfc\x13\x37\xaa\xda\x72\x0d\x19\x2d\x6f\x2e\xde\x9f\x5b\xfd\xa2\x2b\xfe\x27\xd2\x84\xec\x25\x05\xe6\x56\xad\x36\xcb\x53\x4a\xa3\x13\x98\x23\x7d\x19\x86\x76\x11\xe4\x7b\x37\x51\x42\x90\xba\xf2\xdc\x2d\xce\x30\xeb\xa4\x07\x24\xf6\xd7\xdd\x88\x37\x2e\x94\x2c\x98\x1d\xa6\xe7\x8c\x1f\xe9\x7a\x25\x89\xad\xef\x2d\xa2\x99\x0c\x46\xf0\xf6\x2d\x0c\x5e\xbf\x1e\x74\xd3\x37\x7f\xd4\xe0\x75\x7d\x57\x58\x3b\x96\x43\x6b\x9f\x00\x2d\x67\xdc\x47\x22\x46\x6d\x59\x27\xc3\xba\xb4\x86\x03\x1b\x3a\x0a\x30\xb6\xca\x49\x72\x38\x3a\x58\xbb\x2d\xb8\x25\x1b\xa3\x3e\x39\xe6\x33\x3d\x5d\xf2\xcf\x9d\xa3\x29\xf9\x49\xed\xf4\x4a\x98\x75\xc5\xf6\x3f\x0c\x47\xdd\x9a\x8b\x96\xe7\x22\xd7\x0f\x2d\x3d\xf9\x72\x08\x5d\xed\x3c\x01\xee\x1b\xfe\x2f\xc5\xcf\x09\x41\x1e\x45\xbe\xbb\xdd\xea\x7c\x0a\xe5\x35\x3b\x61\x8b\xa5\x0b\xd8\xdd\xc4\xb3\x60\xf5\x1d\x7c\x2f\x3f\x26\x9d\x3d\x11\x6f\xb3\x9b\xba\x45\xb0\xff\xb8\x50\xf7\xb4\x66\x32\xe8\x0a\xcc\x7f\x92\xf8\xd9\x8e\x37\x39\x49\xfb\x4f\x14\x57\x53\x0a\xff\x6b\x3a\xfd\x84\x11\xf5\x29\x6c\x2a\x1c\xe2\x09\xe9\xda\x08\x74\x2e\x3f\x53\x99\xf5\x28\xe5\x41\x91\xe5\xf6\xf4\x4b\xcc\x27\x2e\x4f\xed\x43\x06\x27\xf0\x0f\x2d\xf9\x36\x2d\xe9\x47\xe8\xa8\x0e\x92\xff\x64\x5a\x29\xd9\xb8\x1b\x7f\x46\x87\x8a\xb1\xe6\x96\xe2\x88\x0c\xaa\xb9\x51\xc8\xd6\xe3\x99\xd9\x92\x56\x6f\x29\x5b\x6b\x8f\x72\x41\xe2\xb1\x89\x14\xd7\x89\xb8\xbd\x9e\x46\x93\x90\xa3\x09\xbc\xea\x6d\xe3\x77\x37\x7b\x9b\x6a\x41\x08\x9e\xfa\xf6\x7a\xda\x76\xed\x34\x48\xdd\xf5\xc7\x43\xcd\x0d\x95\x9b\xee\x1e\x0a\xfe\xfe\x77\xff\xd3\x5b\xca\xaf\x30\xc1\xea\xb1\xef\xd6\xbd\x78\x18\x54\x0b\xed\xbb\x89\x9f\x27\xa8\xaf\x0f\xc3\x64\x7e\x33\x3e\x44\x97\x65\x85\xd2\x9a\x17\x9d\xcb\xf3\xc7\x85\x1a\x77\xc7\xb3\x62\x3d\xe9\x26\xcd\x9f\xdc\xe4\xb9\xce\x3c\xfa\x89\x17\x5c\x6c\xb3\x8f\xba\x80\xf3\x69\x77\x14\x38\x1b\x5e\x9f\x9d\xb5\x46\x15\xeb\x71\xbe\xb9\xd2\x2b\xea\x7a\xe2\x11\x26\x5e\x8e\x0b\x68\xfa\x2b\x90\x6a\xf7\x6b\x5e\xdf\x3f\x4b\xf8\x8b\x13\xf9\x5f\xe8\x8a\x06\xed\x36\x51\x93\x2d\xd3\x34\x81\x55\x62\x95\x1e\xcf\x01\xe5\x14\xec\xb8\x71\xa0\x00\xae\x7f\x24\xa8\x1e\x3d\x2b\x35\xdb\x81\xe6\x2b\xb5\xe5\x54\xf7\x23\x25\x94\x38\xba\x09\x98\xa6\x49\x26\x4b\x70\x8b\x84\xf5\xaf\xce\xb8\xf1\xfa\x8e\xca\x67\xbb\x2a\x41\xe9\x8f\xe9\x81\x51\x09\x4e\x23\xeb\xbe\x71\x13\x08\x1a\x3b\x5c\x87\x5f\xf9\x7e\x02\xcd\x01\xe4\xfb\xe8\x45\x86\xe1\x60\x25\x0c\x35\xa7\x29\x1b\x1f\xf8\x34\xb2\x59\x1b\xe7\x8f\xb9\xce\x73\x32\x59\x4d\x68\x8c\x45\xe9\x67\xab\x03\x36\xfa\xed\x98\xb9\xb9\xe9\x51\xd6\xcd\x9d\x9f\xd2\xd6\x1e\xd6\xfb\x26\xbb\x65\x5f\xe9\x5d\x16\xe4\x01\xbd\xc9\x54\x96\x09\x87\x9b\x37\x44\x22\x95\x8c\x01\x85\x4d\xb5\xe9\xd6\x1b\xe9\x15\x0e\xcd\xf6\xdf\xe6\x25\x0f\x89\xc3\x7d\x61\xe6\x65\x74\xbf\x85\x8e\xaf\x9b\x97\x96\x51\x9f\xda\xb3\xb1\x73\xdb\xc0\xca\x32\x8c\x8f\x39\xd0\x35\x05\x91\x05\xee\x96\xa2\x58\x06\x25\xa5\x81\xc5\xaa\x04\x25\x79\xe7\x4c\x55\x95\xd3\xbc\xde\x7c\x16\xe5\x97\x80\x7e\x46\xe8\xf1\x6c\x3c\x4a\xdb\xaa\x63\x64\xed\x9b\x6c\xfe\xdc\x1e\x69\x7f\xc3\x08\x50\xf1\x44\xd3\x3f\x8d\xe1\x1c\x98\x00\x0a\x11\x0e\x61\x9b\xe4\x5d\x32\xab\xbc\x57\xe8\x47\xec\xec\x2c\x4c\xa0\x35\x6e\x81\x66\x75\x35\x67\x65\x32\x4d\x4a\xfa\x4a\x2f\x9c\xd5\xbf\x2e\x55\x69\x7e\x57\xc4\x3d\xd4\xe8\x4f\xa5\xcf\xcc\x23\x31\xbb\xf7\x16\xe2\x1b\xc2\xb7\x98\xe7\x14\xd0\x4d\x8f\x64\xc2\x7a\x33\x4b\x89\xca\x41\x89\x30\xbd\x36\x97\x0a\xa2\xaa\xd4\x0e\x4a\xb5\x93\x05\xa3\x26\x7f\x07\x0c\xda\x80\xe6\xf3\x30\x87\xd2\x61\x00\x82\x7e\x84\x0b\x2d\x4e\x22\x38\xb4\xf6\x84\xda\xdf\x9c\xe6\xf5\x30\x16\x83\xb1\x0f\xc5\x2d\xe6\xbe\x97\x7b\x3f\x4a\x7d\x9f\x8f\xdd\xed\x3b\x1e\xdf\xec\xff\xbd\xc4\x7b\x02\xe6\xf6\x00\xe1\xbf\xb5\x03\x1f\x90\xc9\xa7\x49\xff\x7f\xef\x21\x84\x17\x47\x9f\xf1\x0d\x04\x0f\xaf\x7e\x79\xb7\x79\x57\x95\x9c\x9c\xdc\x2b\xc9\x9b\x37\x4f\xad\x4a\xaf\xd2\x69\xe4\xa0\xed\x66\xd2\x01\xe6\x0f\xb8\x24\xbd\x1a\xcc\x0d\x5b\x44\xf2\x68\xae\x51\xfa\x06\x00\xa2\x7c\x35\x9a\x48\xeb\xf6\x4e\x5a\xaa\x99\xcc\x6a\x1f\xba\x85\x8c\x9d\x72\x7d\x89\x8e\xf5\xde\x25\x5b\xb3\x99\xa8\x84\xdd\x0f\x13\x50\xcd\x5b\x48\x4d\xcd\x32\x76\x46\x73\xfe\xea\x91\x53\xe3\xb6\x53\x93\x16\x5d\xaa\x4d\x55\x42\x54\x00\x14\xe1\x68\x97\xf1\xd5\xd2\x6a\x0d\x9f\x0e\xfa\xd8\xd3\xbe\xe2\xf2\x0e\xb1\xb9\x2e\x7c\x84\x7a\x4f\x4d\xe7\x92\xd1\x65\x5a\xad\x9f\xa3\xb7\xad\x46\x2f\xbe\xfb\xee\xbb\x03\x84\x25\x4e\x33\xbc\xdf\xf0\xda\x00\x01\x7a\xe9\x29\x82\x67\x37\xbd\xf0\x02\xb4\xbb\x44\xf3\x76\xf0\x2c\xe6\x46\x4d\xfd\xd8\x05\x11\xaf\x5b\xaf\xd8\xc1\x05\x9c\xd5\xd3\xec\xee\x2d\xd2\x54\x7f\xba\x7b\x1b\x35\xc4\xad\x4e\x43\xb2\x3b\xd3\xad\xd9\x17\xf1\x3a\x87\xdf\x5e\x4f\xfb\xce\xce\xbd\x9a\xd7\xc6\xe0\xc0\xf6\xf6\xcb\x7a\xb9\xa3\x69\xb0\x43\x27\x79\x50\xf3\x5a\x28\xa9\x0d\xcd\x70\x80\x49\x27\x98\xdc\x5d\x53\x32\xf4\xf1\x26\xf3\x30\x19\xae\x7f\xd3\x09\x16\xa9\x25\x54\x8a\x95\xe7\xef\x52\x8e\x7a\x33\xc8\x89\x71\x14\x23\x1d\x9c\x67\x6d\xbf\xb1\x59\x47\xe3\x80\xb9\xc4\x2d\x41\xc2\xb0\x2d\x1f\x9e\x9f\x46\xef\x68\xc4\x3e\x32\xca\x88\x7b\x91\x49\x69\x12\xf2\xeb\xf9\xab\x1e\x47\xf5\xa8\x03\xeb\x96\xb4\xa9\x36\xb6\xae\x39\x99\x5e\x70\x9b\x47\x2f\x2c\x1c\x25\xa2\xf6\xd9\x56\xee\xff\x22\x40\x49\xaa\x71\x2f\xec\xd3\xfc\x73\xeb\xfd\x8f\x03\x32\xec\x91\x5f\xd6\x1e\x22\x84\x30\x75\x29\x8e\x9e\x53\xcb\x8a\x2d\x2c\x8c\x24\xf5\xd8\xb1\xc7\x69\xcf\x63\x8a\xd3\x92\x74\x24\xe5\x23\xda\x32\x61\x5b\x7e\xec\x26\xa7\x09\x39\xdf\x70\x40\x1f\xb2\x4c\x88\xb4\xc2\x7f\x0b\x5f\xa8\x1e\xcc\xbf\x29\x0e\x14\x09\x1f\x5e\xfc\x5f\x00\x00\x00\xff\xff\x4d\xa2\xbf\xd9\xfc\x45\x00\x00"

func leofynftCdcBytes() ([]byte, error) {
	return bindataRead(
		_leofynftCdc,
		"LeofyNFT.cdc",
	)
}

func leofynftCdc() (*asset, error) {
	bytes, err := leofynftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "LeofyNFT.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0x86, 0xe, 0x93, 0xd9, 0x97, 0x68, 0xaa, 0xbd, 0xb3, 0x41, 0x87, 0x1e, 0xfc, 0x1, 0x66, 0xa4, 0xd7, 0xfe, 0x96, 0x13, 0x94, 0x96, 0x7f, 0xee, 0xef, 0x27, 0x74, 0x35, 0x83, 0x76, 0x11}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"LeofyCoin.cdc": leofycoinCdc,
	"LeofyNFT.cdc":  leofynftCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"LeofyCoin.cdc": {leofycoinCdc, map[string]*bintree{}},
	"LeofyNFT.cdc": {leofynftCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
