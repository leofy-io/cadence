// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../contracts/LeofyCoin.cdc (6.821kB)
// ../../../contracts/LeofyNFT.cdc (17.98kB)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _leofycoinCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x59\xdd\x6e\xdc\xbc\x11\xbd\xf7\x53\x4c\x7d\xd1\xae\x11\x7b\xed\x02\x45\x2f\x0c\x3b\x89\x93\x26\x40\x80\x36\x08\x92\xfe\x5c\x73\xa5\xd9\x15\x6b\x89\x14\x48\x6a\xd7\x1b\xc3\xef\xfe\x81\xc3\x1f\x91\x5c\x69\x6d\x23\x09\x02\x64\x25\x71\x86\xc3\xe1\x99\x33\x87\x0c\xef\x7a\xa9\x0c\x7c\x1e\xc4\x86\xaf\x5a\xfc\xb7\xbc\x47\x01\x6b\x25\x3b\x38\x5d\x5e\x6a\xc3\x44\xcd\x54\x7d\x99\x7d\x5e\x56\x75\x75\x7a\x72\xd2\x0f\x2b\xa8\xa4\x30\x8a\x55\x06\xfe\x89\x72\xbd\xff\x28\xb9\xb8\x2e\x5c\x3d\x9e\x00\x00\x5c\x5e\x02\x3d\xea\x2f\x82\x1b\xce\x5a\xfe\x13\x6b\xff\x21\x7e\x6f\x10\x70\x8b\xc2\x80\x69\x98\x01\xae\x01\x3b\x6e\x0c\xd6\xb0\x6b\x50\x80\x69\x70\x9c\x8d\x6b\xa8\x14\x32\xe3\x9d\xd8\x48\x9c\xe9\xc1\x24\x0b\xee\x7e\xff\x18\xfa\xbe\xdd\x5f\xc3\x7f\x3e\xf3\x87\xbf\xff\xed\xec\x24\x8f\xea\x7f\xdc\x34\xb5\x62\x3b\xf1\xca\x98\xc8\x18\x98\x42\xd8\x05\x0f\x2e\x77\x0c\xfe\xcb\x86\xd6\x4c\x46\x17\x27\x5b\xb0\x4e\x0e\xc2\x84\xa0\xce\xc9\xf4\x1a\xee\xea\x5a\xa1\xd6\xef\xca\x20\xff\x81\xbd\xd4\xdc\xbc\x3a\x71\x63\x90\x75\xf0\x00\x46\x1e\x0d\x31\x4e\x75\x10\xa2\x91\xf3\x01\xfe\x8b\x8b\x57\x47\x27\x70\x97\x46\xd8\x8d\x2e\xca\x98\x9c\xf7\x22\xa0\x32\x84\x0f\x83\x12\xbf\x94\x20\x6d\x94\xdc\xcf\x44\xe0\x9c\xcf\x46\x40\x01\xaa\x8f\x09\x2e\x5f\x1c\x02\xa3\x3c\xd0\xe2\x15\x28\xd4\x72\x50\x15\xce\xa3\x3c\x9b\x69\xc1\xda\x56\xee\xb0\xbe\x9b\x09\xeb\x2b\xeb\xb0\x86\x9e\x99\x46\xa7\x41\x59\x6f\x2d\x1a\x07\x82\x1f\x46\x2a\xb6\xc1\x6f\xcc\x34\xd7\x90\x3c\x64\x23\xbf\x63\x85\x7c\x8b\xea\xdb\xb0\x6a\x79\xe5\xc6\x8e\xbf\xb3\xa1\x1f\x58\xcb\x44\x85\x2f\x18\x79\x57\x77\x5c\xcc\x4e\x3f\x6e\xae\x61\x2d\x68\xaa\x61\x90\xeb\x91\x6d\x80\x0b\xc0\x07\xae\x0d\x8a\x0a\xa3\xe3\x2d\x53\x60\xac\x49\x5e\xf5\xd1\xdd\x08\xfc\x71\x87\x3e\xb1\xaa\x81\x41\xa3\x02\x6d\xa4\x42\x0d\xcc\x3a\xb7\x04\x58\xa1\x9d\x52\x8a\x76\x4f\x24\x44\xc6\x76\x5e\xd3\x20\x77\xa3\xd9\x06\xd3\x8d\x5e\x0f\xa2\x32\x5c\x0a\xed\x47\x79\x13\x26\x6a\xd8\xc8\x2d\x5a\x10\xc1\xca\x39\xeb\x15\xd2\xfb\x5e\x6a\x63\xe9\xad\xe6\x64\x18\xbc\x71\x51\xb0\x69\xa0\xc2\x3d\xc1\xb5\x62\x6d\x8b\xf5\x32\x9d\xbb\x6a\xb0\xba\xd7\xd0\xb0\xbe\xb7\xb8\x32\xa0\x06\x61\x78\x87\x64\x89\x5b\x54\xc0\x62\x7c\x04\xb0\xcc\x45\xf0\xf4\xdd\x43\xd0\x7e\x17\x6e\xe9\x2b\x0c\x60\x0c\xab\xb2\x6c\x8c\x0f\xc6\x26\x27\x23\x67\x42\xb8\x8d\x31\x78\x73\x95\xb5\xe6\x82\x6c\xcf\x41\x4b\xfb\x59\x11\xc0\x85\x84\x1d\xdb\xc3\x5a\xda\xc0\x3a\xd6\xf2\x8a\xcb\x41\xbb\x8d\x30\xd2\x4f\xe9\x12\x18\xb3\x22\x07\x3f\x29\x17\xc0\xb8\x5a\xc2\x1d\xe8\x1e\x2b\xce\x5a\x5f\x19\x63\x09\x09\xc4\x5a\x5b\x47\xab\x31\x04\x23\xa9\xd2\x82\xb7\x91\x81\x96\x65\x7d\x44\x37\x34\x7f\xd1\xd9\x96\xdf\x94\xdc\xf2\x1a\xd5\x79\xf1\x3e\xd4\x49\xf9\xde\x17\x05\x3c\x3a\x1c\x26\x9b\x46\x58\x85\x95\xff\xee\x96\xa6\x61\x1b\x51\x9a\xe2\xda\x8f\xca\x31\x1d\xe1\x12\xfa\x1e\xed\x48\x70\x68\x51\x10\x56\x42\x09\xb5\x7b\x6f\x41\x11\x6d\xad\xe1\xa2\xf0\x7c\xe6\x5b\x77\xf8\xa3\xb1\x5d\x2f\x83\xcb\xdb\xe0\x3c\x0e\x79\xca\x22\x09\xed\x30\x79\x97\x7e\xfe\x1c\x10\xe8\xb0\xc2\xee\x5d\xbd\x39\x66\x05\xe6\x1e\xd4\x66\xe8\x50\x98\xd4\xce\x96\x4a\x70\xad\x9d\xb1\xb7\xa1\xae\x1b\x6b\x6d\x39\x33\xef\x17\xe3\x11\xa5\x3d\xe5\x1a\xb4\xf2\x87\xa9\xbd\xaf\xd1\xc0\xce\x83\x76\x40\x69\x64\x5b\xa7\x0e\xec\x0c\x9d\x14\xb8\x8f\x23\x57\xc8\xc5\x06\x8c\x62\x42\xaf\x51\x29\xac\x97\x76\x16\x85\x66\x50\x42\xd3\x78\x81\xbb\x76\x9f\x3a\x09\x75\xe4\xa7\x94\x59\x35\x91\x5f\x57\x95\xb6\x50\xb8\xa1\x12\x5c\x25\xcd\x3b\x75\x85\xad\xc6\x9d\xad\xa5\xc9\x15\x5b\xcc\xac\x07\x11\x53\x56\xb6\xae\x6b\x78\x9f\x43\xd4\x45\x74\x74\xdf\xb3\xc7\x0b\x9f\xfe\xcc\xc0\x76\xb6\x59\xa9\xe3\xfe\x0d\x52\x87\x9c\xc9\x9d\x40\xf5\x6e\xc9\x9c\xaa\x38\xcb\x7c\xb9\x3c\xc2\xcd\x45\x4a\x04\x23\x52\x9d\xb7\xb3\x19\x10\xfa\x8c\xbd\x06\x83\x7e\x4f\xe4\xea\xff\x58\x95\x40\x24\xf4\xb1\xba\xd6\x59\xc9\x19\x1d\xeb\xcc\xef\x64\x56\xc7\x08\xb4\x3c\xfd\x2c\x2e\xb9\x06\xdf\xc8\xad\x1f\x2f\x44\xc8\x81\xb6\x73\xbb\xb8\x56\x58\xb1\x41\xe3\x08\xf4\xac\xe6\x6c\xb8\x09\xa2\x2d\x76\x51\x85\x30\x3c\xc5\x11\xdf\x90\xe9\x5f\xc6\xc0\x1b\x96\xad\x69\x85\x28\x2c\x1e\xf5\x60\x95\x83\x5d\x35\xd1\xf5\x5a\x52\xcb\xf1\x60\xf4\x42\xe9\x28\xee\xfc\x06\x2c\xdc\x66\x4f\x61\xad\x24\x19\x2b\x09\x88\xf7\xe0\xe6\xc2\x2b\x69\xfd\x27\x78\x1f\xfb\xfd\x32\x5f\xf5\x73\xf8\x7c\xe3\x9c\x2d\x4b\xb2\x2a\x60\x7a\x28\x77\x33\x33\xa7\x7a\x9f\xc5\x6a\x66\x03\xb7\x70\xb5\xbc\xca\xbe\x87\x3d\xcd\x79\x3d\x81\xac\x1f\xb0\x28\x93\x32\xae\x3e\x11\x35\x70\x3b\xf3\xfe\x22\x4b\x41\xe6\x88\xaf\x17\x59\x7a\xde\xda\x18\xcb\xd9\x8a\xdc\x14\xa2\x37\xb5\xcf\x97\xff\x74\x92\xff\x7a\x8a\x72\xcb\xd5\xee\xa7\xae\x37\xfb\x29\xe5\x95\x17\x62\xce\xcf\x0e\xf6\x96\xbf\x80\xa5\x85\xf5\x13\x95\x8c\xf2\x42\xd4\x91\x6f\xf9\xc8\xa7\xac\x6d\x2d\x33\x7b\x5e\xb5\x22\x81\x44\x45\x37\x68\xc7\xaf\xae\xc9\x06\x2d\x94\x3a\x23\x01\x48\x4e\x9c\xdb\x48\xd5\xa5\xe8\xb3\x2f\xa4\xaa\x9d\x54\xa1\xea\x75\xdf\xa3\xb3\xaa\xa2\xe6\xe4\xf4\x07\x5b\xb5\xc4\x11\xca\xe9\x83\x50\x1d\x3a\x36\x7c\x2a\x51\x30\xfb\x1e\x0f\x94\x88\xad\xa6\x32\x8d\x0b\xcb\xdf\x25\x63\x3f\x43\x98\x76\xbf\xd3\xdd\xc9\x54\x0e\x69\x71\xae\x8d\x62\x46\xaa\x42\xa6\x38\x77\x5f\x71\xe7\x14\xd6\x8b\x38\x35\x6e\x65\xb2\x41\x93\x27\x9d\x63\x1c\x52\x4c\x3c\x73\xda\xb9\x86\xf7\x5e\xfa\x3d\x1e\x16\xf9\xd1\xe3\x52\xf6\x78\xbc\xf9\x4c\x47\x30\xe3\xa0\x2c\x82\x24\x6f\x87\x3a\x3b\x34\x1c\xd7\x8a\x08\x06\xcc\x6e\x46\x40\x90\xd3\xe1\x96\xd0\x83\x7a\x7d\x91\x6c\x8d\x29\x29\x05\xa7\x17\x4d\x16\x78\xee\xf0\x1b\x34\x7b\xd8\x99\xbc\x1b\x45\xb9\x0c\x89\x10\x9d\xdc\x88\x6c\x26\x6b\xe6\x48\xe4\x45\x70\xb1\xc3\x75\xb2\xae\x73\x6a\xb6\x36\xaa\x2e\x14\xb5\x49\xce\x81\xe7\xa5\x30\x4c\x34\x57\x37\xc7\x02\xc7\x90\x36\x86\x3b\xa1\x93\x8a\x0e\x54\xc0\xcc\x1e\xe3\x0e\x59\xd4\x67\x99\x58\xf6\x1a\x4e\x5d\xa6\xfc\x15\x87\xe3\xa1\x15\xc2\x86\xb0\xa5\x6c\x0a\x04\xd1\xda\xe9\x9c\x9f\x1b\xdf\xdc\x8a\xc4\xcf\xf8\x6d\x51\x6b\xe7\xd4\xe6\x21\x6c\xa6\x73\x75\x3a\x43\xdc\xf0\xea\x66\xf3\x66\x4a\x00\x1e\x46\x09\x53\xa1\x3f\xab\x1e\x8b\x1b\x9f\x52\xec\xc1\x2f\xe9\x43\x3a\xf2\x4c\x93\xc9\x94\x00\x2e\x97\x93\x3d\x4f\x17\x3d\xcd\x90\x3a\x23\x47\xe5\x7d\x0b\xdc\xc2\xa5\x6f\x27\x97\x31\xc7\xb9\xca\x21\xbb\xc3\xdb\x17\x6b\xd9\xd3\xd3\x68\x18\x46\xe5\xb6\x07\xd7\x31\x53\xa6\x1f\x0a\xc1\x40\x96\xe5\xf5\xcc\x64\xb4\x34\x88\xec\x32\x4d\x3b\x1e\x46\xe3\xd5\x80\x36\xcc\x24\x47\x15\x9a\x22\x87\xd9\x5f\xaf\xae\xac\x6e\x4a\x1d\x39\xe2\x06\x06\x2e\x62\xa8\x58\xcf\x56\xbc\xe5\x66\x1f\xaa\x3c\x39\xbb\xd1\x5d\x05\x3e\xf4\x52\xa3\x2e\x0f\x6e\xbe\xe1\x8e\xf7\x1f\xa6\x51\x72\xd8\x34\xf4\x31\x64\x0e\x88\x00\xd7\xac\xcc\x84\x67\xe2\xa5\x66\x5b\x5c\xcc\xe1\xad\x5c\xd0\x99\x93\x8e\x05\x79\x24\xf9\x3c\x9b\x9e\xa4\xe5\xe2\xfe\xe6\xcf\x85\xd9\xe3\xf4\x35\xc3\xd3\xdb\xc5\x4c\x01\x1f\x42\xe6\x3c\x1b\x69\x98\xda\xa0\x39\x16\x5e\x1c\x7e\xf6\x9b\x77\x24\xd9\x95\xa0\xea\xd6\x1c\x6d\x7b\x4b\xb6\x24\x5c\x98\x3c\xb3\x23\x2f\x49\x96\x77\x35\x9f\xab\x83\x12\xf9\xbd\xa9\xa2\x83\xa0\x40\x30\x6a\xf0\x3a\x2b\x9e\x31\x45\x1d\x81\x69\xff\x8a\xe4\x3e\x80\x6a\x26\x2c\x33\x7a\xb5\x67\x24\xa7\x0e\x6e\x2e\xc2\x05\x59\x26\xdd\x16\x33\xa8\xf2\xd0\x25\xdb\xe4\x4c\x53\xd6\x78\xbe\x80\x4f\x96\x8f\x99\x48\x6f\xaf\x75\x23\x77\x89\x64\x88\x91\xda\x03\xe8\x78\x05\x95\x1c\x0d\x13\x4e\x3f\xf2\x5f\x33\x07\xc5\xe3\xc9\xf4\xe9\x04\xfe\x08\x00\x00\xff\xff\xa0\xb3\x88\x73\xa5\x1a\x00\x00"

func leofycoinCdcBytes() ([]byte, error) {
	return bindataRead(
		_leofycoinCdc,
		"LeofyCoin.cdc",
	)
}

func leofycoinCdc() (*asset, error) {
	bytes, err := leofycoinCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "LeofyCoin.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x24, 0x49, 0x6d, 0xb1, 0x4, 0xb3, 0x2d, 0xfe, 0x87, 0x3, 0x14, 0x50, 0x1e, 0x80, 0x2c, 0x5b, 0x49, 0x6c, 0xf0, 0x83, 0x1a, 0x47, 0x79, 0x1e, 0x14, 0x17, 0x46, 0xdf, 0xd9, 0x61, 0x8d, 0xfc}}
	return a, nil
}

var _leofynftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x5f\x73\x1b\x37\x92\x7f\x8e\x3f\x45\x87\x0f\x36\x99\x93\x28\xdf\x9f\xba\x07\xae\x14\xdb\x67\x45\x77\xba\x72\xb4\xae\x98\x9b\xad\x2b\x97\xeb\x16\x9c\x01\x45\xac\x87\x00\x03\x80\x62\xb8\x5a\x7d\xf7\xab\x6e\xfc\x19\x60\x06\x43\x31\x8e\x7c\x4f\xcb\x87\x98\xe2\x00\x8d\x46\x77\xa3\xfb\xd7\x8d\x9e\x9c\x7d\xf7\x0c\x00\xe0\x92\x9b\x4a\x8b\x8d\x15\x4a\xce\xe0\x2d\x97\x56\xb3\x06\x3e\xac\x99\xb6\xf0\x56\xe1\x5f\x95\x85\xa5\xd2\xf0\x8e\xab\xe5\xfe\x19\x4d\x99\xaf\x84\x01\x43\x43\xaa\x30\x04\xbf\x30\x21\x0d\xd8\x15\x87\x4a\x69\x0e\xcb\xad\xac\x90\x2a\x6b\x84\xdd\x13\x09\x9a\x4c\x74\x4e\xa0\xd2\x9c\x59\x5e\xc3\x62\x0f\xef\x7e\xf8\xe3\xd5\xff\xc0\xe5\xf5\x7f\x5e\xcf\xdf\xbc\x83\x0f\xd3\x77\xd3\xb0\x0c\x6f\xe9\xaf\x99\x64\xb7\xdc\x91\xaf\x99\x65\xc0\x8c\x51\x95\x20\x1a\x3b\x61\x57\xc0\x9a\x86\x1e\x0a\xcb\xd7\x86\xe6\xdb\x15\xb3\xc0\x34\x87\xad\xe1\x35\x30\x03\x96\xaf\x37\x0d\xb3\xdc\x10\x37\x38\xf8\xe6\x6a\x6e\xe2\x62\x12\x98\x84\x37\xf5\x5a\x48\xa8\x98\xf4\x1c\x82\xe4\x3b\xb8\x46\x9a\x53\xf7\x0f\xb2\x64\x84\xb1\xa0\x96\xc0\x60\xb3\x5d\x34\xa2\x02\x63\xf5\xb6\xb2\x6e\x45\x22\x17\xc5\xe1\x07\x08\xb9\x54\x7a\xcd\x50\x1e\xc0\x16\x6a\x6b\x81\x11\xa7\x27\xc0\x64\x8d\x74\xb4\xb8\xc3\xd5\x34\x37\x6a\xab\x2b\xc7\xb3\xdb\x85\x82\xb5\x90\x96\xf8\xb8\xb9\x9a\xbf\x30\xd0\x08\xf9\x99\xd7\xf8\x00\xb7\x80\x4c\x25\x02\x63\xc4\x7f\x24\xb3\x62\x4e\x64\x1b\xb5\xe3\x1a\xa7\xd4\x8a\x24\xa5\x96\x4e\x58\xeb\x8d\xd2\x96\x49\x0b\x8c\x74\xe5\x04\x27\x24\x3d\xcc\x35\x3c\x85\x3f\x93\x88\x90\xbe\x81\x1d\xce\xb1\x0a\x2a\x24\x16\x34\x6d\x70\x26\x23\x8e\x4e\xbc\x06\xf8\xde\x0d\xb1\x2b\x2e\x34\x2c\x94\xd6\x6a\x87\xcf\xe3\x1c\x24\x72\xcb\x51\x1c\x9a\x2f\xb9\xe6\xb2\xe2\x10\xf6\xed\x44\x14\xd8\x69\x19\x41\x5d\x9d\x04\xe2\xb2\xcb\x83\x92\xd1\x0e\x60\x6b\x84\xbc\x75\x6a\x89\xe4\xa7\x44\x9e\xfe\x43\x3b\x42\x1b\x20\x33\x41\x31\xf3\xda\x13\xc6\x1f\x84\x14\x56\xb0\x46\xfc\x2d\xda\x18\xed\xed\xfa\x12\x95\x46\x04\x70\x94\xe6\x76\xab\xa5\x33\x65\x5c\x98\xc8\xe8\x92\x0d\xb3\xc6\x28\xa8\xf9\x52\x48\x6e\x80\xc1\x5b\xd5\x34\xdc\x09\x21\xe8\x6b\xea\xce\x96\x30\x68\x8a\x6a\xf1\x57\x9e\x19\x15\xbf\xe3\x7a\xef\x0e\x10\x72\x0d\x6a\x27\xb9\x86\x9d\x68\x1a\x30\x56\x11\xc3\x5e\xd0\xac\xaa\xd4\x56\xda\x68\x40\x74\x78\xfc\x33\x9c\x59\xc5\xa5\x13\x3e\xd7\x4c\x48\x4f\xdd\xcf\x77\xb4\x89\xed\x15\xbb\x43\x99\x1a\x5c\xd4\xdb\x61\x4b\xc4\x9b\x8d\x25\x75\x6c\x0d\xc7\x35\x57\xaa\xa9\x3b\x13\x68\x27\x44\x48\x2a\x0b\x7b\x6e\x61\xc1\xb9\x04\xc3\x9d\x2d\x31\x9c\x1a\x04\x77\xa3\x2c\x9f\xc1\x1b\xda\x1a\x1e\x8c\x6a\xc5\xe4\x2d\x2a\xb3\x55\x34\x31\xb7\x61\x12\x8f\xd7\x12\x05\x26\xe4\x1d\x6b\x44\x0d\x4c\xdf\x6e\xd7\x48\x54\x38\xc6\x36\x5a\xdd\x89\x9a\xd7\xa0\x34\x28\xc9\xd1\xf8\x91\xb1\x8d\xe6\xa7\x95\x92\xb5\xf0\x76\xa3\x61\xa3\x0c\x19\x7c\xf8\x89\x69\x2e\x5f\x58\x58\x73\xeb\x8c\xe6\x2a\xae\x4d\x5b\xa9\x15\x3d\x55\xb5\x58\xee\x3d\x9b\x4e\x19\x62\xbd\x69\xf6\xde\x30\xe0\x25\x52\x96\xa2\x71\x3a\xc4\xe3\x6e\x57\xca\x70\xa8\x98\xe1\x06\x24\x77\x47\x79\x81\x67\x55\xd6\x4d\x6b\x47\x68\xd6\x24\x8e\xef\xce\x9e\x3d\x73\x07\x15\x6e\x94\xbc\xda\xca\x5b\xb1\x68\xf8\x5c\x7d\xe6\x12\x96\x5a\xad\x61\x34\x3d\x33\x96\xc9\x9a\xe9\xfa\xac\x3b\x62\x5a\xd5\xd5\x28\x4c\xff\x91\x5b\x86\xce\xf3\x67\xc1\x77\xa6\x3f\x37\x7b\x9c\x4d\x7c\x64\xd1\xe1\x15\xc9\x9c\xde\x2a\xd1\x4e\x8a\xbf\xb8\x71\xcf\x36\xdb\x45\x7b\x42\xe8\xe1\xcd\xd5\x7c\xd6\xdf\xe9\xbd\xb3\x8b\xb3\x33\x38\x7d\x9a\x4f\x20\xe7\x2c\x3e\xb2\xf0\xc3\x1d\x97\xd6\x3c\xf5\x5a\x81\xde\x0f\x6b\x61\x29\x64\xa1\xe7\x41\x2d\x87\x1d\xb7\x0c\x08\x13\x82\xa3\x33\xde\xed\x02\x0f\xbe\x6c\xc3\xf1\x75\xeb\x96\xc6\x93\x32\x65\x16\xc3\x56\x08\x4d\x83\x54\x71\xd0\x5b\xf7\x64\x2c\xea\x19\xfc\xe9\x5a\xda\x7f\xff\xb7\x13\x34\x7a\x32\x86\x19\xdc\x7f\xb0\x5a\xc8\xdb\x99\xfb\xe7\x61\xd2\x21\xf0\x81\xdb\xd2\x7c\xc9\xd6\x7c\x06\x6e\x8e\xe7\xb2\x9d\xf3\x67\x61\x57\xb5\x66\xbb\x6c\x06\x5a\xc8\x0c\xde\xd4\xb5\xe6\xc6\xbc\xea\x2e\x73\xc9\x37\xca\x08\x9b\xcd\xb0\x6a\x78\xfc\x8f\xe4\xcd\xb3\xe1\x82\x9c\x77\xfb\xb7\xe1\x5a\xb0\xe6\x66\xbb\x5e\x70\xed\x7e\xfd\xd7\x7f\x69\x05\x7a\xc3\xd6\xbc\x86\xf7\xcc\xae\x82\x35\xc4\x15\x1a\xee\xe4\xf6\xc1\x2a\xcd\x6e\x39\x8e\xc1\xad\xc6\x3f\x7a\x03\xdf\x13\x0a\x70\xe3\xda\xef\xcf\xb2\x71\x6d\x38\x38\x8a\x6c\x3b\x7c\x80\x78\x3a\x98\x50\xcd\x20\xd9\xaf\x74\xb0\xe6\x6a\xf3\x61\xa5\x5a\x04\x71\xda\xf0\x3b\xde\xc0\x52\xf0\xa6\x36\xd3\x38\x6a\xc5\x0d\x0f\x78\x09\x61\xc8\x96\x35\x70\xc7\x9a\x2d\x37\x2d\x82\xa3\xf0\x56\x0f\x00\x93\xaf\x75\x56\x7f\x66\x5a\xb0\x45\xc3\xc1\x88\xbf\x71\xa8\x85\x43\xb3\x7a\x8f\xf1\x23\x39\x5a\xc1\x3a\x58\x55\x71\x63\xc6\x86\x37\xcb\x09\xdc\x31\xed\x90\xe8\x0c\x5e\xdf\x3b\x7b\x9b\xd1\xa4\x87\x56\xe9\x38\xc6\x2a\xcb\x9a\x0f\xdb\xcd\xa6\xd9\x07\xbb\xec\x3f\x27\x53\xcb\xc7\x7c\x4d\x5f\x98\x7a\x23\xaf\xb3\xb7\x6a\x4d\xa7\x8f\xc3\x7c\xbf\xe1\x0e\xc3\x88\x36\xf2\x7f\x05\xdb\x21\xab\x40\xd5\xff\x75\x6b\x2c\x7c\x97\xac\xf8\x1d\xa1\x77\xe4\xc3\x1b\x88\x45\xc8\x14\x18\x0e\x04\x30\xce\x2a\xbb\xe2\x11\x0b\x99\x00\x4e\xa6\x9e\x78\x42\x12\x51\xb1\x54\x31\x89\x89\x34\x9c\x31\x7a\xe3\x73\x36\x79\x02\x0b\x04\xef\x08\x36\x30\xfc\x55\x1c\xc6\x88\x2a\x08\xaa\x4d\xd0\x32\x3c\xc0\xb0\xb4\x06\x71\x19\xc8\xe1\xfa\x0b\x9e\x66\x3e\x19\xe7\x6e\x33\x31\x71\xc8\x56\xfd\x3a\x36\x1e\x88\x92\x31\x23\xe6\x84\x9f\x42\xde\xe0\xa0\x9a\x6a\x6a\x13\x03\x41\x9a\x71\x85\x99\x1e\x15\x9b\x0d\xaf\xc4\x52\x54\xf0\x46\x5b\x4c\x8d\x28\x03\x80\x46\x7c\xe6\x2e\xf9\x10\x95\xdd\x62\x46\x88\x10\xc0\x0f\xf9\x6f\xb5\x92\x70\xa9\x78\xea\x5a\x63\x30\x26\x48\xee\xb1\x67\x93\x24\x06\x0c\x10\xcf\x37\x1e\xdc\xfb\xd4\xc6\xa1\x60\xb5\x0c\x24\x10\xda\x05\x9e\xa7\x81\xd3\xf6\xd4\xc5\xd4\x88\x60\xfa\x92\x55\x2e\x85\xea\xba\x53\xb8\xa7\x19\x61\xd6\x72\x2b\x31\x4d\xb9\xbe\x34\xe3\xc9\x0c\x3e\xba\x53\xf8\xa9\x38\x04\x4f\xfd\x3b\x2e\x6f\xed\x0a\x87\x5e\x7b\x14\x5e\x18\x85\x70\xeb\x92\x59\xf6\x1f\xfb\x2b\x74\x89\xe3\x6e\x78\x22\x47\x19\x43\x68\xf8\xf2\xaa\x47\xae\xcd\xaa\x3a\x24\x26\x33\x78\x8e\x3f\xdf\xb7\x21\xe8\x81\x66\x3f\x14\xc4\x91\x0b\x61\x76\x8c\x50\x8a\x4e\x2e\xb8\x90\x69\xe2\xed\x5c\x52\x29\x2c\x8c\x27\x09\x09\xfc\xa0\xb7\x9c\x12\x0d\x38\x3f\x85\xfb\x87\xf8\x30\x99\x19\xf6\xe9\x0e\x0e\xed\xb3\x0f\x4e\xbc\x74\x1e\x4e\x30\x95\xae\xf8\x0c\xfe\x74\x25\x7e\x25\x11\x38\xc6\x02\x7e\x0c\x9f\xb3\x33\x70\xa8\x85\x6c\x28\xa0\xa5\x6c\x08\x6e\x4f\x72\x97\xae\x9e\x9f\x86\x7a\x00\xad\x9f\x8d\x03\x48\xc0\x52\xf8\x76\xd2\x1d\xe2\xd9\xa2\x7f\xb2\x67\x93\xec\xaf\xec\x0f\x0c\xdd\xc8\xc1\x25\x5c\x04\x4e\xa6\x4e\xc5\xbd\xcd\x7c\x70\x09\xa0\xed\x66\xcb\xe4\x47\xd8\x2d\x1f\x90\xfa\x47\x22\xff\x09\xce\x4f\xbf\x0d\x2b\x64\x23\xf9\x5a\xf4\x21\x62\x54\x71\x27\x3a\x25\xa0\x31\x7c\x99\xf4\x18\xbd\x96\x95\xe6\x94\x9d\x51\xf5\xe2\x12\x8c\x72\xde\x06\x79\x37\x98\x50\xb9\x72\xcd\x6d\x70\xc4\xe1\x33\xb4\x2a\x5c\x0c\x3f\xfa\x27\xf8\xe7\x9c\x01\x9f\x93\x39\xa1\x96\xc4\x5e\xb0\xbb\xdf\x74\xbe\x3a\xf6\xbd\xd1\xbc\xf3\x4b\x47\xfe\x8e\xe2\x27\xf8\xf6\x02\x73\xc4\x19\x8c\xde\x32\x89\xa1\xc8\x2d\x4a\xa2\x9f\x51\x76\x4e\x66\x58\x2b\x4e\x22\xe2\xbf\x0a\x63\x47\x19\xdd\x87\xe2\x46\x9f\x17\x96\x62\xa6\xcf\xf6\x1f\x4a\x02\x38\x3b\xf3\x3e\xcf\x53\xa3\xaa\x04\xd3\x9a\xed\x43\xfd\x08\x9f\x45\x90\xe6\x2d\x8f\x18\x6d\x3d\xc7\x11\x6e\xb4\x23\x21\xcf\x7a\xcb\xf9\xf4\x33\xdf\x9b\x03\x0c\xb6\x1e\x17\xd2\x47\x3f\x39\xa6\xc9\x07\x43\xe3\x9e\x53\xea\x4f\x55\xbc\x24\x19\xea\x72\xd7\xf3\xe0\x8f\x32\xe8\xa8\x1f\x66\xb1\xe3\xee\xa3\x4c\xa9\x66\x54\x88\xb1\x3e\xb6\xa6\x94\x06\x3e\x31\xfc\x52\xc4\x08\xba\x09\x34\x8f\x20\xf0\xc3\xaf\xb3\x10\x6d\x46\x2e\x3e\x8f\x5c\xf8\x0d\x3b\x55\x6b\x6e\x57\x42\xde\x1e\x41\x8b\xa2\xfe\x28\x84\xf7\x51\x3a\x23\xfd\xfe\x9e\x69\xb6\xe6\x96\x6b\x33\x8b\x79\x19\x9a\xb9\x88\xfc\x93\x1d\x39\xcf\x60\x60\xc1\x85\xbc\x05\xc3\x99\xae\x56\x89\xd6\x3a\x6c\xf8\x3d\x20\x1d\x27\x0a\xab\xfc\x1c\xc4\x8c\xc9\xac\xa2\x99\xcc\x53\x45\xb8\xf9\x0c\x41\x91\x8b\x2c\xf0\xc7\x8d\xab\x66\x3f\x71\x38\xef\xd8\xd6\xd9\x19\x5c\x52\x59\x69\xa9\x34\x21\x1e\xcd\xef\xb8\xb6\x20\x96\xb1\xaa\x79\x7d\x09\x4a\x7b\x06\x85\x09\x55\xaf\x8c\x8a\x58\x8e\x87\x9d\xcc\xe4\xbe\x17\x64\x08\x4f\x5d\x1c\xf4\x16\xa5\x13\x80\x63\xa6\x41\x64\x1f\x89\xa3\x4f\x1d\xa7\x94\xfe\xc5\x1b\xc3\xfb\xce\x30\xb8\x64\xd1\xfc\x61\x60\x6e\xfb\x2d\x7e\xa9\xb9\xb1\x5a\xed\xc7\x9d\xbd\xf8\x9f\x93\xbd\x77\x88\x94\x90\x4f\x0e\x04\x9d\x43\xcc\x81\x4e\x10\x51\xab\xce\xde\xe3\x61\x44\xd2\x83\x4c\x92\x0a\x0e\xae\x3e\x11\xca\x0e\xbd\x41\x19\x8a\x19\x8a\x49\xad\x97\x45\x47\xf5\x3c\x86\xc1\xf6\xf7\x7b\x5f\x6e\xcb\x71\xdc\x43\x8f\xde\x66\xab\xab\x15\x33\x7c\xbc\x61\x7b\x0c\xce\x33\x78\x9d\x17\xf5\x7e\x66\xdb\xc6\x4e\x66\xf0\xba\x57\x60\xbc\xb9\x9a\x1f\x04\x95\xb3\x44\xac\x29\x0a\x73\x59\x1e\x6c\xa5\xf8\x65\x4b\x40\x20\x5c\xca\x64\xd6\x36\x20\xfe\x94\x0a\x41\x1f\x13\x2f\x80\x5a\x5f\x4a\xf7\x2c\xf1\x2e\x80\xce\xb2\x71\x67\x79\xcd\x36\x9b\x8e\x3b\x0b\x85\x77\x0c\xbe\x38\xa7\x51\xf2\x16\x2c\xd7\x6b\xd8\x31\x57\x6e\x8f\x84\xc9\x35\x2e\x42\x55\x62\x0a\xd7\xf6\x05\xd2\xb6\x7c\xbd\x51\x9a\xe9\x7d\x4a\xb6\x52\xd2\x57\xe0\x76\x2b\xd1\x70\xd8\xa1\x6b\xba\xc5\x6c\xc8\x5d\x02\x2d\xb8\xb5\x5c\xd3\x1a\xee\x76\x26\xa6\x2e\x25\x77\x75\x84\xb5\x1d\x67\x6e\xbd\x51\x98\x72\xa5\xf0\xff\x75\xc1\x98\xfa\xb3\x06\xac\x14\xb1\xfe\x6f\xc0\xe8\x47\x61\xa6\x28\x17\x1f\xc9\xbf\xbd\x80\x97\x33\x18\xdd\x84\x3a\x67\xd4\x4e\xe5\x01\x14\x07\xbe\xde\xd8\x7d\x17\x25\xa5\x7f\x45\x37\x41\x08\x7b\x08\x45\xf6\xa7\xc4\xb5\x2e\xfa\x51\x36\x0e\xa2\x3d\xc2\x45\x01\xf1\xd3\xe3\x54\x2d\x70\x01\x2f\xfb\x23\x72\x95\x24\x29\x48\x7a\xec\x0f\x01\xd7\xb5\x90\xf6\xe6\x6a\xde\x4b\xba\xd0\x2c\x1d\x25\x16\xae\x15\x4b\x89\x0f\xda\x7c\xbb\x28\x12\xea\x29\xa5\x9f\x0d\xf8\x4c\xa0\x3f\xd2\x9f\xdf\x44\xe4\xfd\x41\x79\x41\xb6\x2f\x26\x84\xf3\xe9\xf8\x7e\x76\x51\xbb\x2a\x71\x92\x08\x69\x5e\x89\x8d\xe0\x92\xce\xa8\xbf\xd6\x0a\xd7\x82\x5c\xe8\xb6\xba\xf0\x98\x02\xa6\x9e\xf6\xd8\xa2\xdb\x9b\xc1\xf9\xa9\x93\x51\x87\x09\xca\x98\x92\xe2\x73\x51\x3c\x45\x71\x1c\xb3\xfd\xce\x62\x25\x4b\x3a\x42\x6e\x25\x9e\x7a\x07\x20\x49\xa1\x0e\xd8\xd8\x82\xd9\x6a\xf5\xa3\x37\xb4\x5f\xb6\x4c\x5a\x61\x63\x99\xb2\x13\x9d\xa9\x5e\x10\x13\xf2\xae\xcd\x3b\xff\x28\xe0\x1c\x02\x99\xa1\xcc\x29\xda\x75\xdf\xca\xe0\x02\x04\xb2\x3c\x0c\x25\x7a\x3b\x30\xdc\xbe\xc7\x23\x3a\x3e\xe8\x94\x0e\x1c\xe9\xc1\x94\xf1\x8b\xc3\x73\x39\xdf\x78\x5e\xf2\x0a\x08\xcf\x8e\x0f\xf7\x05\x56\x7f\x5f\xe4\x3f\x3e\xdd\xed\x1c\xa6\x90\x05\x06\x77\xfe\x3d\x79\xf3\x46\x18\x8b\x47\x73\x85\xc1\xba\xd1\x9c\xd5\x7b\x77\x47\x1c\xb8\xac\x47\x3d\xea\x9e\xef\xa9\x30\xd7\xbe\x24\x3b\x9e\xef\x37\xfc\xfc\x75\x7b\xd3\x48\x5b\xf8\x7e\x3c\x99\xcc\x60\xe4\x87\xc3\x1d\xfe\x16\x02\xbe\xe6\xbf\x6c\xb9\xc1\xa3\xb2\xf4\x3b\x04\x3a\xe5\xc3\xab\x2d\x58\x43\xd5\xdf\x8b\x8b\xc4\x34\x7a\xe4\x31\x5f\x4f\x2b\xcb\xc9\x42\x34\xe1\x60\x0a\x4f\xd5\x9f\xa5\x45\x1f\x5c\x92\xe0\x2e\xdc\xa1\x85\x2f\xd1\x9f\x0c\x88\xfa\xe3\xcb\x4f\x93\xde\x02\x8e\xcf\xe4\xec\xdf\x72\x1b\x05\x47\x72\xeb\x1c\x33\x9a\x10\x7d\xa1\xbb\xb3\x3b\x3f\x0d\x72\x39\x50\xcc\xf2\x56\x7c\x7e\x8a\x9b\x2a\x59\x64\xc4\xf4\x70\x00\xd4\xe7\x7b\x2b\xa3\xfb\x04\xcd\x31\x09\x62\xbd\x69\xa8\xe0\xe4\xba\x6f\xa8\x6d\xa7\xda\x1a\xab\x12\xcc\x70\x27\xf8\xae\xed\x72\x9a\x66\x54\xe8\x59\xd6\xde\x94\xe1\x8d\x30\x38\x82\x5f\x0f\xf7\x82\x40\xd3\x4b\x75\xe8\xa7\x15\x6c\x6b\x57\x4a\x07\x68\xd4\x7b\x9c\xde\xa2\xf6\x1e\xd6\x69\xeb\xd6\xc0\x18\xbb\xda\xae\x17\x92\x89\x66\x70\xc4\x23\x89\x4d\xe9\x92\xb4\x83\xf4\x32\x6d\xe5\x1b\xca\x63\x7c\xba\x9b\x93\xae\x8e\xbb\x5b\xc9\x07\x24\xfb\x78\x23\xf7\x1f\x48\xc6\xf7\x79\xc3\xc2\x95\x68\xf8\x43\x3e\xab\x93\x83\x77\x3c\x7a\x61\x63\xe1\xe1\xa4\xe0\xfd\xdd\xce\xe0\xc2\x6f\xb1\x10\x88\xd9\x1a\xa3\x03\xfe\xd3\x7f\x98\xec\x10\x2e\xd2\xfd\xf6\x87\xc6\xbd\xc2\x45\xbb\xef\xe9\x56\x8b\xce\x51\xcc\xe1\xab\x2f\x0c\xf7\x06\xa4\xfb\x84\x8b\x6c\xdb\x47\x24\xc7\xc5\x66\x8c\xe9\xf5\xcd\xd5\xfc\x24\x6f\x27\x99\xfe\xc4\x8d\x6a\xee\xb8\x86\x82\x95\xb7\xb7\xf0\x5f\xdb\xfc\x92\xfb\xfe\x27\xb2\x84\xe2\x8d\x05\x02\xad\x4e\xcd\xe5\x29\xb5\xd1\x8b\xd2\x89\xbd\x8c\x63\xed\x08\xca\x85\x9c\x04\x1d\xe4\x7e\xbd\x74\xa5\xd3\x31\x29\xef\xa4\x47\xa4\xf6\x17\xfd\xf0\x37\xad\x94\xac\x98\x1d\xe7\xeb\x4c\x1f\x29\x81\x65\x28\x37\x14\x1a\xf1\x98\x8c\x26\xf0\xea\x15\x8c\x5e\xbc\x18\xf5\xb1\x5c\x58\x6a\xf4\xc2\x5f\x1c\x7a\xc7\x72\x68\xec\x13\xb0\xe5\x0e\xf7\x91\x8c\x51\x8d\xd6\xe9\xd0\xe7\xd9\x70\x60\x42\xcf\x00\xa6\x56\x39\x4d\x8e\x27\x07\x13\xb9\x5b\x6e\xe9\x8c\x51\xd1\x1c\xc1\xcd\x40\xc9\xfc\x63\x6f\x69\x42\x42\xf9\x39\xbd\x14\x66\xd3\xb0\xfd\xf7\xe3\x49\x3f\x01\xa3\xe1\xa5\xc8\xf5\x7d\xc7\x4e\x3e\x1d\x62\x57\x3b\x4f\x80\xf3\xc6\xff\x4b\xf1\x73\x46\x94\x27\x89\xef\xee\xd6\x3d\x9f\xc2\x78\xcd\x4e\xd8\x6a\xe5\x02\x76\x1f\x85\x56\xcc\x5f\xc8\x0f\xca\x63\xd6\x9b\x93\xc8\xb6\x38\xa9\x9f\x11\x87\x8f\x0b\x75\x4f\x7b\x4c\x46\x7d\x85\x85\x4f\x16\x3f\xbb\xf1\xa6\xa4\xe9\xf0\x49\xe2\x6a\xbe\xc3\xff\x9a\xcf\xdf\x63\x44\x7d\x8a\x33\x15\x17\x09\x1b\xe9\x9f\x11\xe8\xdd\x84\xe6\x3a\x1b\x30\xca\x83\x2a\x2b\xcd\x19\xd6\x58\x00\x2e\x4f\xed\x43\x46\x27\xf0\x0f\x2b\xf9\x32\x2b\x19\x66\xe8\xa8\x72\x52\xf8\x14\xea\x2a\xc5\xb8\x9b\x7e\x26\x87\x32\xb3\xf6\xca\xe2\x08\x04\xd5\x5e\x2f\x14\x93\xf3\x42\xa3\x49\xa7\xd0\x54\x4c\xbc\x27\xa5\x20\xf1\x58\x7b\x8a\x2b\x4b\xdc\x5c\xcd\x93\xb6\xc8\xc9\x0c\x9e\x0f\xd6\xf4\xfb\x93\xc3\x99\xea\x50\x88\x9e\xfa\xe6\x6a\xde\x75\xed\xd4\x55\xdd\xf7\xc7\x63\xcd\x0d\xe5\x9e\xee\x52\x0a\xfe\xfe\xf7\xf0\xd3\x2b\xc2\x57\x08\xb0\x06\xce\x77\xe7\x92\x3c\x76\xad\xc5\x5a\xde\x2c\x34\x17\xf8\xbb\xc4\xd8\xa3\xdf\xf6\x12\xd1\xcd\x59\xa5\xb4\xe6\x55\xef\x26\xfd\x71\xa5\xa6\xa5\xf2\xa2\x5a\x4f\xfa\xa0\xf9\xbd\x6b\x43\xd7\x85\x47\x3f\xf1\x8a\x8b\xbb\xe2\xa3\x3e\xe1\x32\xec\x4e\x02\x67\x2b\xeb\xb3\xb3\x4e\xdf\xa2\xef\xed\x5b\x2a\xbd\xa6\x12\x28\x2e\x61\xd2\xe1\x38\x80\x5a\xc1\xe2\x56\xed\x7e\xc3\xfd\x65\xb4\x84\xbf\x38\x95\xff\x85\xee\x6b\xf0\xdc\x66\x66\x72\xc7\x34\xb5\x63\xd5\x98\xa5\xa7\x4d\x41\x25\x03\x3b\xae\x37\x28\x92\x1b\xee\x0f\xf2\x7d\x68\xb5\x66\x3b\xd0\x7c\xad\xee\x38\xe5\xfd\xb8\x13\x02\x8e\xae\x1d\xa6\xad\x98\xc9\x1a\xdc\x20\x61\xc3\x4b\x34\xae\xd7\xbe\x67\xf2\xc5\x12\x4b\x34\xfa\x63\x0a\x62\x94\x82\x53\xff\x7a\xa8\xe2\xc4\x0d\x4d\x1d\xaf\xe3\xcf\x7c\x3f\x83\x76\x01\xf2\x7d\xf4\x56\xc3\x78\xb4\x16\x86\x2a\xd5\x84\xc6\x47\x01\x46\xb6\x63\x53\xfc\x58\x2a\x43\x67\x6d\xd6\xc4\xc6\x54\xd4\xa1\xd1\x3a\x72\xa3\x5f\x4d\x99\x6b\xa2\x9e\x14\xdd\xdc\xf9\x29\x4d\x1d\x10\x7d\xa8\xb8\x5b\xf6\x99\xde\x6a\x41\x19\xd0\x3b\x4d\x75\x9d\x49\xb8\x7d\x59\x24\x31\xc9\x94\x50\x9c\xe4\x8f\xae\x9f\x48\xef\x73\x68\xb6\xff\x32\x2f\x79\x48\x1d\xee\x0b\x33\xdf\x26\x97\x5d\xe8\xf8\xfa\xb8\xb4\x4e\x8a\xd6\x41\x8c\xbd\xab\x07\x56\xd7\xb1\x97\xcc\x91\xf6\x3b\x48\x4e\xe0\x6e\x25\xaa\x55\x34\x52\xea\x5e\x6c\x6a\x50\x92\xf7\xd6\x54\x4d\x3d\x2f\xdb\xcd\x47\x51\x7f\x8a\xec\x17\x94\x9e\x36\xca\xa3\xb6\xad\x3a\x46\xd7\xa1\xc8\x16\xd6\x1d\xd0\xf6\x17\xf4\x03\x55\x4f\xd4\x0a\xd4\x1e\x9c\x03\xed\x40\x31\xc2\x21\x6d\x93\xbd\x55\x66\x55\xf0\x0a\xc3\x8c\x9d\x9d\xc5\x76\xb4\xd6\x2d\x50\xe3\xae\xe6\xac\xce\x5a\x4b\xc9\x5e\xe9\xd5\x33\xff\xeb\x4a\xd5\xe6\x77\x45\xdc\x43\x55\xff\x5c\xfb\xcc\x3c\x12\xb3\x07\xaf\x24\xbe\x20\x7c\x8b\x65\xc9\x00\x5d\x2b\x49\x21\xac\xb7\x8d\x95\x68\x1c\x04\x84\xe9\x05\xba\x5c\x11\x4d\xa3\x76\x50\xab\x9d\xac\x18\x55\xfc\x7b\x64\xf0\x0c\x68\xbe\x8c\x4d\x29\x3d\x01\x20\xe9\x47\xa4\xd0\x91\x24\x92\xc3\xd3\x9e\xed\xf6\x37\xc3\xbc\x01\xc1\x62\x30\x0e\xa1\xb8\x23\xdc\x37\x72\x1f\xfa\xaa\xef\xcb\xb1\xbb\x7b\xe1\x13\x2a\xff\xbf\x77\xf3\x61\x03\x4b\x7b\x60\xe3\xbf\xb5\x02\x1f\x99\x29\xc3\xa4\xff\xbf\x97\x12\xe2\x2b\xa4\x5f\xf1\x75\x84\x40\xcf\xbf\xc6\xdb\xbe\xb5\x4a\x4e\x4e\xee\x95\xe4\xed\x3b\xa8\x56\xe5\xf7\xea\xd4\x7f\xd0\x75\x33\x79\x37\xf3\x0f\x38\x24\xbf\x27\x2c\x75\x5e\x24\xfa\x68\xaf\x51\x86\xba\x01\x12\xbc\x9a\xb4\xa7\xf5\x6b\x27\x1d\xd3\xcc\x1a\xb7\x0f\x5d\x49\xa6\x4e\xd9\xdf\xa8\x63\xbe\xf7\x96\x6d\xd8\x42\x34\xc2\xee\xc7\x19\xa9\xf6\x95\xa4\x36\x67\x99\xba\x43\x73\xfe\xfc\x91\x55\xd3\xb2\x53\x0b\x8b\xde\xaa\x6d\x53\x43\x92\x00\x54\x71\x69\x87\xf8\xbc\xb6\x3a\x9d\xa8\xa3\x21\xf1\x74\xef\xbb\x3a\x82\x29\x43\xf5\x2f\x90\x08\xdd\x45\x86\xf9\x89\x58\xbe\x6d\xc5\x31\xb0\x16\xca\xe1\x9b\x6f\xbe\x39\x20\x02\xed\x87\xe6\x7e\xb6\xdb\x00\x41\x1b\x0c\x72\x80\xaf\x7e\x60\xe3\x0b\xd4\xee\xea\x2d\x9c\x9e\xaf\x72\x48\xe9\x2a\x20\x75\x5c\xa4\x8d\xce\x5b\x7a\x70\x01\x67\xbe\x21\xde\xbd\x88\x9a\x5b\x5d\x7f\x6e\xab\x25\x9c\xea\xec\xaa\x38\x33\x9f\x5a\x7c\x97\xaf\xb7\xf8\xcd\xd5\x7c\x68\xed\xd2\xdb\x7d\x5d\x0e\x0e\x4c\xef\xbe\xef\x57\x5a\x9a\x7a\x43\x74\x86\x9e\xda\x37\x4b\xc9\x72\xa8\x0d\x04\x4c\xde\x04\xe5\x6e\xa8\xb2\xbe\x91\x97\x85\x87\x59\x7f\xfe\xcb\x5e\x88\xc9\xcf\x4a\xa3\x58\x7d\xfe\x3a\x97\xe8\xf7\xe3\x24\x4d\xe9\xa8\x71\x92\x32\x1d\x5d\xae\x3f\xf5\xa9\x33\x48\x3a\x0a\x4b\x70\x2f\x63\xc2\xb0\x3b\x3e\x3e\x3f\x4d\x5e\xf3\x48\x3d\x6b\x82\xa3\x07\x99\xc9\xf7\x24\xe4\xe7\xf3\xe7\x03\xee\xed\x51\xb7\xd7\x4f\x84\x73\x6b\xec\x5c\x8e\x32\x7d\xcb\x6d\x99\xbd\x38\x70\x92\xa9\x3a\x60\xb4\xd2\xff\x85\x80\xa0\xad\x71\x2f\xfc\x53\x0b\x75\xe7\x15\x92\x03\x3a\x1c\xd0\x5f\xf1\x3c\x24\x0c\x21\xe0\xa9\x8e\x6e\x75\x2b\xaa\x2d\x0e\x4c\x34\xf5\xd8\xb2\xc7\x59\xcf\x63\x86\xd3\xd1\x74\xa2\xe5\x23\x8a\x39\x71\x5a\xb9\x73\xa7\x64\x09\x25\xdf\x70\xc0\x1e\x8a\x42\x48\xac\x22\x7c\x8b\x5f\x28\x8b\x2c\xbf\x6c\x0e\x14\x3f\x1f\x9e\xfd\x5f\x00\x00\x00\xff\xff\xb6\x8e\x6f\x88\x3c\x46\x00\x00"

func leofynftCdcBytes() ([]byte, error) {
	return bindataRead(
		_leofynftCdc,
		"LeofyNFT.cdc",
	)
}

func leofynftCdc() (*asset, error) {
	bytes, err := leofynftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "LeofyNFT.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8f, 0xfd, 0xcd, 0xf2, 0x0, 0x63, 0x1a, 0x43, 0xe6, 0x44, 0x72, 0x94, 0xb6, 0x24, 0xff, 0x46, 0xbe, 0xc6, 0x8b, 0x84, 0x9f, 0xfa, 0xde, 0x6f, 0xe2, 0x69, 0x41, 0xb6, 0x41, 0x58, 0xc5, 0xe4}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"LeofyCoin.cdc": leofycoinCdc,
	"LeofyNFT.cdc":  leofynftCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"LeofyCoin.cdc": {leofycoinCdc, map[string]*bintree{}},
	"LeofyNFT.cdc": {leofynftCdc, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
